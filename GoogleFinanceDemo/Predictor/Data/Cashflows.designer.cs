#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinanceAI.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="FinancialData")]
	public partial class CashflowsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCashflow(Cashflow instance);
    partial void UpdateCashflow(Cashflow instance);
    partial void DeleteCashflow(Cashflow instance);
    #endregion
		
		public CashflowsDataContext() : 
				base(global::FinanceAI.Properties.Settings.Default.FinancialDataConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public CashflowsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CashflowsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CashflowsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CashflowsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cashflow> Cashflows
		{
			get
			{
				return this.GetTable<Cashflow>();
			}
		}
	}
	
	[Table(Name="dbo.Cashflows")]
	public partial class Cashflow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ticker;
		
		private System.DateTime _Date;
		
		private char _Period;
		
		private System.Nullable<decimal> _Net_Income_Starting_Line;
		
		private System.Nullable<decimal> _Depreciation_Depletion;
		
		private System.Nullable<decimal> _Amortization;
		
		private System.Nullable<decimal> _Deferred_Taxes;
		
		private System.Nullable<decimal> _Non_Cash_Items;
		
		private System.Nullable<decimal> _Changes_in_Working_Capital;
		
		private System.Nullable<decimal> _Cash_from_Operating_Activities;
		
		private System.Nullable<decimal> _Capital_Expenditures;
		
		private System.Nullable<decimal> _Other_Investing_Cash_Flow_Items__Total;
		
		private System.Nullable<decimal> _Cash_from_Investing_Activities;
		
		private System.Nullable<decimal> _Financing_Cash_Flow_Items;
		
		private System.Nullable<decimal> _Total_Cash_Dividends_Paid;
		
		private System.Nullable<decimal> _Issuance__Retirement__of_Stock__Net;
		
		private System.Nullable<decimal> _Issuance__Retirement__of_Debt__Net;
		
		private System.Nullable<decimal> _Cash_from_Financing_Activities;
		
		private System.Nullable<decimal> _Foreign_Exchange_Effects;
		
		private System.Nullable<decimal> _Net_Change_in_Cash;
		
		private System.Nullable<decimal> _Cash_Interest_Paid__Supplemental;
		
		private System.Nullable<decimal> _Cash_Taxes_Paid__Supplemental;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTickerChanging(string value);
    partial void OnTickerChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnPeriodChanging(char value);
    partial void OnPeriodChanged();
    partial void OnNet_Income_Starting_LineChanging(System.Nullable<decimal> value);
    partial void OnNet_Income_Starting_LineChanged();
    partial void OnDepreciation_DepletionChanging(System.Nullable<decimal> value);
    partial void OnDepreciation_DepletionChanged();
    partial void OnAmortizationChanging(System.Nullable<decimal> value);
    partial void OnAmortizationChanged();
    partial void OnDeferred_TaxesChanging(System.Nullable<decimal> value);
    partial void OnDeferred_TaxesChanged();
    partial void OnNon_Cash_ItemsChanging(System.Nullable<decimal> value);
    partial void OnNon_Cash_ItemsChanged();
    partial void OnChanges_in_Working_CapitalChanging(System.Nullable<decimal> value);
    partial void OnChanges_in_Working_CapitalChanged();
    partial void OnCash_from_Operating_ActivitiesChanging(System.Nullable<decimal> value);
    partial void OnCash_from_Operating_ActivitiesChanged();
    partial void OnCapital_ExpendituresChanging(System.Nullable<decimal> value);
    partial void OnCapital_ExpendituresChanged();
    partial void OnOther_Investing_Cash_Flow_Items__TotalChanging(System.Nullable<decimal> value);
    partial void OnOther_Investing_Cash_Flow_Items__TotalChanged();
    partial void OnCash_from_Investing_ActivitiesChanging(System.Nullable<decimal> value);
    partial void OnCash_from_Investing_ActivitiesChanged();
    partial void OnFinancing_Cash_Flow_ItemsChanging(System.Nullable<decimal> value);
    partial void OnFinancing_Cash_Flow_ItemsChanged();
    partial void OnTotal_Cash_Dividends_PaidChanging(System.Nullable<decimal> value);
    partial void OnTotal_Cash_Dividends_PaidChanged();
    partial void OnIssuance__Retirement__of_Stock__NetChanging(System.Nullable<decimal> value);
    partial void OnIssuance__Retirement__of_Stock__NetChanged();
    partial void OnIssuance__Retirement__of_Debt__NetChanging(System.Nullable<decimal> value);
    partial void OnIssuance__Retirement__of_Debt__NetChanged();
    partial void OnCash_from_Financing_ActivitiesChanging(System.Nullable<decimal> value);
    partial void OnCash_from_Financing_ActivitiesChanged();
    partial void OnForeign_Exchange_EffectsChanging(System.Nullable<decimal> value);
    partial void OnForeign_Exchange_EffectsChanged();
    partial void OnNet_Change_in_CashChanging(System.Nullable<decimal> value);
    partial void OnNet_Change_in_CashChanged();
    partial void OnCash_Interest_Paid__SupplementalChanging(System.Nullable<decimal> value);
    partial void OnCash_Interest_Paid__SupplementalChanged();
    partial void OnCash_Taxes_Paid__SupplementalChanging(System.Nullable<decimal> value);
    partial void OnCash_Taxes_Paid__SupplementalChanged();
    #endregion
		
		public Cashflow()
		{
			OnCreated();
		}
		
		[Column(Storage="_Ticker", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ticker
		{
			get
			{
				return this._Ticker;
			}
			set
			{
				if ((this._Ticker != value))
				{
					this.OnTickerChanging(value);
					this.SendPropertyChanging();
					this._Ticker = value;
					this.SendPropertyChanged("Ticker");
					this.OnTickerChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Period", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[Column(Name="[Net Income/Starting Line]", Storage="_Net_Income_Starting_Line", DbType="Money")]
		public System.Nullable<decimal> Net_Income_Starting_Line
		{
			get
			{
				return this._Net_Income_Starting_Line;
			}
			set
			{
				if ((this._Net_Income_Starting_Line != value))
				{
					this.OnNet_Income_Starting_LineChanging(value);
					this.SendPropertyChanging();
					this._Net_Income_Starting_Line = value;
					this.SendPropertyChanged("Net_Income_Starting_Line");
					this.OnNet_Income_Starting_LineChanged();
				}
			}
		}
		
		[Column(Name="[Depreciation/Depletion]", Storage="_Depreciation_Depletion", DbType="Money")]
		public System.Nullable<decimal> Depreciation_Depletion
		{
			get
			{
				return this._Depreciation_Depletion;
			}
			set
			{
				if ((this._Depreciation_Depletion != value))
				{
					this.OnDepreciation_DepletionChanging(value);
					this.SendPropertyChanging();
					this._Depreciation_Depletion = value;
					this.SendPropertyChanged("Depreciation_Depletion");
					this.OnDepreciation_DepletionChanged();
				}
			}
		}
		
		[Column(Storage="_Amortization", DbType="Money")]
		public System.Nullable<decimal> Amortization
		{
			get
			{
				return this._Amortization;
			}
			set
			{
				if ((this._Amortization != value))
				{
					this.OnAmortizationChanging(value);
					this.SendPropertyChanging();
					this._Amortization = value;
					this.SendPropertyChanged("Amortization");
					this.OnAmortizationChanged();
				}
			}
		}
		
		[Column(Name="[Deferred Taxes]", Storage="_Deferred_Taxes", DbType="Money")]
		public System.Nullable<decimal> Deferred_Taxes
		{
			get
			{
				return this._Deferred_Taxes;
			}
			set
			{
				if ((this._Deferred_Taxes != value))
				{
					this.OnDeferred_TaxesChanging(value);
					this.SendPropertyChanging();
					this._Deferred_Taxes = value;
					this.SendPropertyChanged("Deferred_Taxes");
					this.OnDeferred_TaxesChanged();
				}
			}
		}
		
		[Column(Name="[Non-Cash Items]", Storage="_Non_Cash_Items", DbType="Money")]
		public System.Nullable<decimal> Non_Cash_Items
		{
			get
			{
				return this._Non_Cash_Items;
			}
			set
			{
				if ((this._Non_Cash_Items != value))
				{
					this.OnNon_Cash_ItemsChanging(value);
					this.SendPropertyChanging();
					this._Non_Cash_Items = value;
					this.SendPropertyChanged("Non_Cash_Items");
					this.OnNon_Cash_ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Changes in Working Capital]", Storage="_Changes_in_Working_Capital", DbType="Money")]
		public System.Nullable<decimal> Changes_in_Working_Capital
		{
			get
			{
				return this._Changes_in_Working_Capital;
			}
			set
			{
				if ((this._Changes_in_Working_Capital != value))
				{
					this.OnChanges_in_Working_CapitalChanging(value);
					this.SendPropertyChanging();
					this._Changes_in_Working_Capital = value;
					this.SendPropertyChanged("Changes_in_Working_Capital");
					this.OnChanges_in_Working_CapitalChanged();
				}
			}
		}
		
		[Column(Name="[Cash from Operating Activities]", Storage="_Cash_from_Operating_Activities", DbType="Money")]
		public System.Nullable<decimal> Cash_from_Operating_Activities
		{
			get
			{
				return this._Cash_from_Operating_Activities;
			}
			set
			{
				if ((this._Cash_from_Operating_Activities != value))
				{
					this.OnCash_from_Operating_ActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Cash_from_Operating_Activities = value;
					this.SendPropertyChanged("Cash_from_Operating_Activities");
					this.OnCash_from_Operating_ActivitiesChanged();
				}
			}
		}
		
		[Column(Name="[Capital Expenditures]", Storage="_Capital_Expenditures", DbType="Money")]
		public System.Nullable<decimal> Capital_Expenditures
		{
			get
			{
				return this._Capital_Expenditures;
			}
			set
			{
				if ((this._Capital_Expenditures != value))
				{
					this.OnCapital_ExpendituresChanging(value);
					this.SendPropertyChanging();
					this._Capital_Expenditures = value;
					this.SendPropertyChanged("Capital_Expenditures");
					this.OnCapital_ExpendituresChanged();
				}
			}
		}
		
		[Column(Name="[Other Investing Cash Flow Items, Total]", Storage="_Other_Investing_Cash_Flow_Items__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Investing_Cash_Flow_Items__Total
		{
			get
			{
				return this._Other_Investing_Cash_Flow_Items__Total;
			}
			set
			{
				if ((this._Other_Investing_Cash_Flow_Items__Total != value))
				{
					this.OnOther_Investing_Cash_Flow_Items__TotalChanging(value);
					this.SendPropertyChanging();
					this._Other_Investing_Cash_Flow_Items__Total = value;
					this.SendPropertyChanged("Other_Investing_Cash_Flow_Items__Total");
					this.OnOther_Investing_Cash_Flow_Items__TotalChanged();
				}
			}
		}
		
		[Column(Name="[Cash from Investing Activities]", Storage="_Cash_from_Investing_Activities", DbType="Money")]
		public System.Nullable<decimal> Cash_from_Investing_Activities
		{
			get
			{
				return this._Cash_from_Investing_Activities;
			}
			set
			{
				if ((this._Cash_from_Investing_Activities != value))
				{
					this.OnCash_from_Investing_ActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Cash_from_Investing_Activities = value;
					this.SendPropertyChanged("Cash_from_Investing_Activities");
					this.OnCash_from_Investing_ActivitiesChanged();
				}
			}
		}
		
		[Column(Name="[Financing Cash Flow Items]", Storage="_Financing_Cash_Flow_Items", DbType="Money")]
		public System.Nullable<decimal> Financing_Cash_Flow_Items
		{
			get
			{
				return this._Financing_Cash_Flow_Items;
			}
			set
			{
				if ((this._Financing_Cash_Flow_Items != value))
				{
					this.OnFinancing_Cash_Flow_ItemsChanging(value);
					this.SendPropertyChanging();
					this._Financing_Cash_Flow_Items = value;
					this.SendPropertyChanged("Financing_Cash_Flow_Items");
					this.OnFinancing_Cash_Flow_ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Total Cash Dividends Paid]", Storage="_Total_Cash_Dividends_Paid", DbType="Money")]
		public System.Nullable<decimal> Total_Cash_Dividends_Paid
		{
			get
			{
				return this._Total_Cash_Dividends_Paid;
			}
			set
			{
				if ((this._Total_Cash_Dividends_Paid != value))
				{
					this.OnTotal_Cash_Dividends_PaidChanging(value);
					this.SendPropertyChanging();
					this._Total_Cash_Dividends_Paid = value;
					this.SendPropertyChanged("Total_Cash_Dividends_Paid");
					this.OnTotal_Cash_Dividends_PaidChanged();
				}
			}
		}
		
		[Column(Name="[Issuance (Retirement) of Stock, Net]", Storage="_Issuance__Retirement__of_Stock__Net", DbType="Money")]
		public System.Nullable<decimal> Issuance__Retirement__of_Stock__Net
		{
			get
			{
				return this._Issuance__Retirement__of_Stock__Net;
			}
			set
			{
				if ((this._Issuance__Retirement__of_Stock__Net != value))
				{
					this.OnIssuance__Retirement__of_Stock__NetChanging(value);
					this.SendPropertyChanging();
					this._Issuance__Retirement__of_Stock__Net = value;
					this.SendPropertyChanged("Issuance__Retirement__of_Stock__Net");
					this.OnIssuance__Retirement__of_Stock__NetChanged();
				}
			}
		}
		
		[Column(Name="[Issuance (Retirement) of Debt, Net]", Storage="_Issuance__Retirement__of_Debt__Net", DbType="Money")]
		public System.Nullable<decimal> Issuance__Retirement__of_Debt__Net
		{
			get
			{
				return this._Issuance__Retirement__of_Debt__Net;
			}
			set
			{
				if ((this._Issuance__Retirement__of_Debt__Net != value))
				{
					this.OnIssuance__Retirement__of_Debt__NetChanging(value);
					this.SendPropertyChanging();
					this._Issuance__Retirement__of_Debt__Net = value;
					this.SendPropertyChanged("Issuance__Retirement__of_Debt__Net");
					this.OnIssuance__Retirement__of_Debt__NetChanged();
				}
			}
		}
		
		[Column(Name="[Cash from Financing Activities]", Storage="_Cash_from_Financing_Activities", DbType="Money")]
		public System.Nullable<decimal> Cash_from_Financing_Activities
		{
			get
			{
				return this._Cash_from_Financing_Activities;
			}
			set
			{
				if ((this._Cash_from_Financing_Activities != value))
				{
					this.OnCash_from_Financing_ActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Cash_from_Financing_Activities = value;
					this.SendPropertyChanged("Cash_from_Financing_Activities");
					this.OnCash_from_Financing_ActivitiesChanged();
				}
			}
		}
		
		[Column(Name="[Foreign Exchange Effects]", Storage="_Foreign_Exchange_Effects", DbType="Money")]
		public System.Nullable<decimal> Foreign_Exchange_Effects
		{
			get
			{
				return this._Foreign_Exchange_Effects;
			}
			set
			{
				if ((this._Foreign_Exchange_Effects != value))
				{
					this.OnForeign_Exchange_EffectsChanging(value);
					this.SendPropertyChanging();
					this._Foreign_Exchange_Effects = value;
					this.SendPropertyChanged("Foreign_Exchange_Effects");
					this.OnForeign_Exchange_EffectsChanged();
				}
			}
		}
		
		[Column(Name="[Net Change in Cash]", Storage="_Net_Change_in_Cash", DbType="Money")]
		public System.Nullable<decimal> Net_Change_in_Cash
		{
			get
			{
				return this._Net_Change_in_Cash;
			}
			set
			{
				if ((this._Net_Change_in_Cash != value))
				{
					this.OnNet_Change_in_CashChanging(value);
					this.SendPropertyChanging();
					this._Net_Change_in_Cash = value;
					this.SendPropertyChanged("Net_Change_in_Cash");
					this.OnNet_Change_in_CashChanged();
				}
			}
		}
		
		[Column(Name="[Cash Interest Paid, Supplemental]", Storage="_Cash_Interest_Paid__Supplemental", DbType="Money")]
		public System.Nullable<decimal> Cash_Interest_Paid__Supplemental
		{
			get
			{
				return this._Cash_Interest_Paid__Supplemental;
			}
			set
			{
				if ((this._Cash_Interest_Paid__Supplemental != value))
				{
					this.OnCash_Interest_Paid__SupplementalChanging(value);
					this.SendPropertyChanging();
					this._Cash_Interest_Paid__Supplemental = value;
					this.SendPropertyChanged("Cash_Interest_Paid__Supplemental");
					this.OnCash_Interest_Paid__SupplementalChanged();
				}
			}
		}
		
		[Column(Name="[Cash Taxes Paid, Supplemental]", Storage="_Cash_Taxes_Paid__Supplemental", DbType="Money")]
		public System.Nullable<decimal> Cash_Taxes_Paid__Supplemental
		{
			get
			{
				return this._Cash_Taxes_Paid__Supplemental;
			}
			set
			{
				if ((this._Cash_Taxes_Paid__Supplemental != value))
				{
					this.OnCash_Taxes_Paid__SupplementalChanging(value);
					this.SendPropertyChanging();
					this._Cash_Taxes_Paid__Supplemental = value;
					this.SendPropertyChanged("Cash_Taxes_Paid__Supplemental");
					this.OnCash_Taxes_Paid__SupplementalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
