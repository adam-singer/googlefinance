#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinanceAI.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="FinancialData")]
	public partial class IncomesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIncome(Income instance);
    partial void UpdateIncome(Income instance);
    partial void DeleteIncome(Income instance);
    #endregion
		
		public IncomesDataContext() : 
				base(global::FinanceAI.Properties.Settings.Default.FinancialDataConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public IncomesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IncomesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IncomesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IncomesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Income> Incomes
		{
			get
			{
				return this.GetTable<Income>();
			}
		}
	}
	
	[Table(Name="dbo.Incomes")]
	public partial class Income : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ticker;
		
		private System.DateTime _Date;
		
		private char _Period;
		
		private System.Nullable<decimal> _Revenue;
		
		private System.Nullable<decimal> _Other_Revenue__Total;
		
		private System.Nullable<decimal> _Total_Revenue;
		
		private System.Nullable<decimal> _Cost_Of_Revenue__Total;
		
		private System.Nullable<decimal> _Gross_Profit;
		
		private System.Nullable<decimal> _Selling_General_Admin__Expenses__Total;
		
		private System.Nullable<decimal> _Research___Development;
		
		private System.Nullable<decimal> _Depreciation_Amortization;
		
		private System.Nullable<decimal> _Interest_Expense_Income____Net_Operating;
		
		private System.Nullable<decimal> _Unusual_Expense__Income_;
		
		private System.Nullable<decimal> _Other_Operating_Expenses__Total;
		
		private System.Nullable<decimal> _Total_Operating_Expense;
		
		private System.Nullable<decimal> _Operating_Income;
		
		private System.Nullable<decimal> _Interest_Income_Expense___Net_Non_Operating;
		
		private System.Nullable<decimal> _Gain__Loss__on_Sale_of_Assets;
		
		private System.Nullable<decimal> _Other__Net;
		
		private System.Nullable<decimal> _Income_Before_Tax;
		
		private System.Nullable<decimal> _Income_After_Tax;
		
		private System.Nullable<decimal> _Minority_Interest;
		
		private System.Nullable<decimal> _Equity_In_Affiliates;
		
		private System.Nullable<decimal> _Net_Income_Before_Extra__Items;
		
		private System.Nullable<decimal> _Accounting_Change;
		
		private System.Nullable<decimal> _Discontinued_Operations;
		
		private System.Nullable<decimal> _Extraordinary_Item;
		
		private System.Nullable<decimal> _Net_Income;
		
		private System.Nullable<decimal> _Preferred_Dividends;
		
		private System.Nullable<decimal> _Income_Available_to_Common_Excl__Extra_Items;
		
		private System.Nullable<decimal> _Income_Available_to_Common_Incl__Extra_Items;
		
		private System.Nullable<decimal> _Basic_Weighted_Average_Shares;
		
		private System.Nullable<decimal> _Basic_EPS_Excluding_Extraordinary_Items;
		
		private System.Nullable<decimal> _Basic_EPS_Including_Extraordinary_Items;
		
		private System.Nullable<decimal> _Dilution_Adjustment;
		
		private System.Nullable<decimal> _Diluted_Weighted_Average_Shares;
		
		private System.Nullable<decimal> _Diluted_EPS_Excluding_Extraordinary_Items;
		
		private System.Nullable<decimal> _Diluted_EPS_Including_Extraordinary_Items;
		
		private System.Nullable<decimal> _Dividends_per_Share___Common_Stock_Primary_Issue;
		
		private System.Nullable<decimal> _Gross_Dividends___Common_Stock;
		
		private System.Nullable<decimal> _Net_Income_after_Stock_Based_Comp__Expense;
		
		private System.Nullable<decimal> _Basic_EPS_after_Stock_Based_Comp__Expense;
		
		private System.Nullable<decimal> _Diluted_EPS_after_Stock_Based_Comp__Expense;
		
		private System.Nullable<decimal> _Depreciation__Supplemental;
		
		private System.Nullable<decimal> _Total_Special_Items;
		
		private System.Nullable<decimal> _Normalized_Income_Before_Taxes;
		
		private System.Nullable<decimal> _Effect_of_Special_Items_on_Income_Taxes;
		
		private System.Nullable<decimal> _Income_Taxes_Ex__Impact_of_Special_Items;
		
		private System.Nullable<decimal> _Normalized_Income_After_Taxes;
		
		private System.Nullable<decimal> _Normalized_Income_Avail_to_Common;
		
		private System.Nullable<decimal> _Basic_Normalized_EPS;
		
		private System.Nullable<decimal> _Diluted_Normalized_EPS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTickerChanging(string value);
    partial void OnTickerChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnPeriodChanging(char value);
    partial void OnPeriodChanged();
    partial void OnRevenueChanging(System.Nullable<decimal> value);
    partial void OnRevenueChanged();
    partial void OnOther_Revenue__TotalChanging(System.Nullable<decimal> value);
    partial void OnOther_Revenue__TotalChanged();
    partial void OnTotal_RevenueChanging(System.Nullable<decimal> value);
    partial void OnTotal_RevenueChanged();
    partial void OnCost_Of_Revenue__TotalChanging(System.Nullable<decimal> value);
    partial void OnCost_Of_Revenue__TotalChanged();
    partial void OnGross_ProfitChanging(System.Nullable<decimal> value);
    partial void OnGross_ProfitChanged();
    partial void OnSelling_General_Admin__Expenses__TotalChanging(System.Nullable<decimal> value);
    partial void OnSelling_General_Admin__Expenses__TotalChanged();
    partial void OnResearch___DevelopmentChanging(System.Nullable<decimal> value);
    partial void OnResearch___DevelopmentChanged();
    partial void OnDepreciation_AmortizationChanging(System.Nullable<decimal> value);
    partial void OnDepreciation_AmortizationChanged();
    partial void OnInterest_Expense_Income____Net_OperatingChanging(System.Nullable<decimal> value);
    partial void OnInterest_Expense_Income____Net_OperatingChanged();
    partial void OnUnusual_Expense__Income_Changing(System.Nullable<decimal> value);
    partial void OnUnusual_Expense__Income_Changed();
    partial void OnOther_Operating_Expenses__TotalChanging(System.Nullable<decimal> value);
    partial void OnOther_Operating_Expenses__TotalChanged();
    partial void OnTotal_Operating_ExpenseChanging(System.Nullable<decimal> value);
    partial void OnTotal_Operating_ExpenseChanged();
    partial void OnOperating_IncomeChanging(System.Nullable<decimal> value);
    partial void OnOperating_IncomeChanged();
    partial void OnInterest_Income_Expense___Net_Non_OperatingChanging(System.Nullable<decimal> value);
    partial void OnInterest_Income_Expense___Net_Non_OperatingChanged();
    partial void OnGain__Loss__on_Sale_of_AssetsChanging(System.Nullable<decimal> value);
    partial void OnGain__Loss__on_Sale_of_AssetsChanged();
    partial void OnOther__NetChanging(System.Nullable<decimal> value);
    partial void OnOther__NetChanged();
    partial void OnIncome_Before_TaxChanging(System.Nullable<decimal> value);
    partial void OnIncome_Before_TaxChanged();
    partial void OnIncome_After_TaxChanging(System.Nullable<decimal> value);
    partial void OnIncome_After_TaxChanged();
    partial void OnMinority_InterestChanging(System.Nullable<decimal> value);
    partial void OnMinority_InterestChanged();
    partial void OnEquity_In_AffiliatesChanging(System.Nullable<decimal> value);
    partial void OnEquity_In_AffiliatesChanged();
    partial void OnNet_Income_Before_Extra__ItemsChanging(System.Nullable<decimal> value);
    partial void OnNet_Income_Before_Extra__ItemsChanged();
    partial void OnAccounting_ChangeChanging(System.Nullable<decimal> value);
    partial void OnAccounting_ChangeChanged();
    partial void OnDiscontinued_OperationsChanging(System.Nullable<decimal> value);
    partial void OnDiscontinued_OperationsChanged();
    partial void OnExtraordinary_ItemChanging(System.Nullable<decimal> value);
    partial void OnExtraordinary_ItemChanged();
    partial void OnNet_IncomeChanging(System.Nullable<decimal> value);
    partial void OnNet_IncomeChanged();
    partial void OnPreferred_DividendsChanging(System.Nullable<decimal> value);
    partial void OnPreferred_DividendsChanged();
    partial void OnIncome_Available_to_Common_Excl__Extra_ItemsChanging(System.Nullable<decimal> value);
    partial void OnIncome_Available_to_Common_Excl__Extra_ItemsChanged();
    partial void OnIncome_Available_to_Common_Incl__Extra_ItemsChanging(System.Nullable<decimal> value);
    partial void OnIncome_Available_to_Common_Incl__Extra_ItemsChanged();
    partial void OnBasic_Weighted_Average_SharesChanging(System.Nullable<decimal> value);
    partial void OnBasic_Weighted_Average_SharesChanged();
    partial void OnBasic_EPS_Excluding_Extraordinary_ItemsChanging(System.Nullable<decimal> value);
    partial void OnBasic_EPS_Excluding_Extraordinary_ItemsChanged();
    partial void OnBasic_EPS_Including_Extraordinary_ItemsChanging(System.Nullable<decimal> value);
    partial void OnBasic_EPS_Including_Extraordinary_ItemsChanged();
    partial void OnDilution_AdjustmentChanging(System.Nullable<decimal> value);
    partial void OnDilution_AdjustmentChanged();
    partial void OnDiluted_Weighted_Average_SharesChanging(System.Nullable<decimal> value);
    partial void OnDiluted_Weighted_Average_SharesChanged();
    partial void OnDiluted_EPS_Excluding_Extraordinary_ItemsChanging(System.Nullable<decimal> value);
    partial void OnDiluted_EPS_Excluding_Extraordinary_ItemsChanged();
    partial void OnDiluted_EPS_Including_Extraordinary_ItemsChanging(System.Nullable<decimal> value);
    partial void OnDiluted_EPS_Including_Extraordinary_ItemsChanged();
    partial void OnDividends_per_Share___Common_Stock_Primary_IssueChanging(System.Nullable<decimal> value);
    partial void OnDividends_per_Share___Common_Stock_Primary_IssueChanged();
    partial void OnGross_Dividends___Common_StockChanging(System.Nullable<decimal> value);
    partial void OnGross_Dividends___Common_StockChanged();
    partial void OnNet_Income_after_Stock_Based_Comp__ExpenseChanging(System.Nullable<decimal> value);
    partial void OnNet_Income_after_Stock_Based_Comp__ExpenseChanged();
    partial void OnBasic_EPS_after_Stock_Based_Comp__ExpenseChanging(System.Nullable<decimal> value);
    partial void OnBasic_EPS_after_Stock_Based_Comp__ExpenseChanged();
    partial void OnDiluted_EPS_after_Stock_Based_Comp__ExpenseChanging(System.Nullable<decimal> value);
    partial void OnDiluted_EPS_after_Stock_Based_Comp__ExpenseChanged();
    partial void OnDepreciation__SupplementalChanging(System.Nullable<decimal> value);
    partial void OnDepreciation__SupplementalChanged();
    partial void OnTotal_Special_ItemsChanging(System.Nullable<decimal> value);
    partial void OnTotal_Special_ItemsChanged();
    partial void OnNormalized_Income_Before_TaxesChanging(System.Nullable<decimal> value);
    partial void OnNormalized_Income_Before_TaxesChanged();
    partial void OnEffect_of_Special_Items_on_Income_TaxesChanging(System.Nullable<decimal> value);
    partial void OnEffect_of_Special_Items_on_Income_TaxesChanged();
    partial void OnIncome_Taxes_Ex__Impact_of_Special_ItemsChanging(System.Nullable<decimal> value);
    partial void OnIncome_Taxes_Ex__Impact_of_Special_ItemsChanged();
    partial void OnNormalized_Income_After_TaxesChanging(System.Nullable<decimal> value);
    partial void OnNormalized_Income_After_TaxesChanged();
    partial void OnNormalized_Income_Avail_to_CommonChanging(System.Nullable<decimal> value);
    partial void OnNormalized_Income_Avail_to_CommonChanged();
    partial void OnBasic_Normalized_EPSChanging(System.Nullable<decimal> value);
    partial void OnBasic_Normalized_EPSChanged();
    partial void OnDiluted_Normalized_EPSChanging(System.Nullable<decimal> value);
    partial void OnDiluted_Normalized_EPSChanged();
    #endregion
		
		public Income()
		{
			OnCreated();
		}
		
		[Column(Storage="_Ticker", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ticker
		{
			get
			{
				return this._Ticker;
			}
			set
			{
				if ((this._Ticker != value))
				{
					this.OnTickerChanging(value);
					this.SendPropertyChanging();
					this._Ticker = value;
					this.SendPropertyChanged("Ticker");
					this.OnTickerChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Period", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_Revenue", DbType="Money")]
		public System.Nullable<decimal> Revenue
		{
			get
			{
				return this._Revenue;
			}
			set
			{
				if ((this._Revenue != value))
				{
					this.OnRevenueChanging(value);
					this.SendPropertyChanging();
					this._Revenue = value;
					this.SendPropertyChanged("Revenue");
					this.OnRevenueChanged();
				}
			}
		}
		
		[Column(Name="[Other Revenue, Total]", Storage="_Other_Revenue__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Revenue__Total
		{
			get
			{
				return this._Other_Revenue__Total;
			}
			set
			{
				if ((this._Other_Revenue__Total != value))
				{
					this.OnOther_Revenue__TotalChanging(value);
					this.SendPropertyChanging();
					this._Other_Revenue__Total = value;
					this.SendPropertyChanged("Other_Revenue__Total");
					this.OnOther_Revenue__TotalChanged();
				}
			}
		}
		
		[Column(Name="[Total Revenue]", Storage="_Total_Revenue", DbType="Money")]
		public System.Nullable<decimal> Total_Revenue
		{
			get
			{
				return this._Total_Revenue;
			}
			set
			{
				if ((this._Total_Revenue != value))
				{
					this.OnTotal_RevenueChanging(value);
					this.SendPropertyChanging();
					this._Total_Revenue = value;
					this.SendPropertyChanged("Total_Revenue");
					this.OnTotal_RevenueChanged();
				}
			}
		}
		
		[Column(Name="[Cost Of Revenue, Total]", Storage="_Cost_Of_Revenue__Total", DbType="Money")]
		public System.Nullable<decimal> Cost_Of_Revenue__Total
		{
			get
			{
				return this._Cost_Of_Revenue__Total;
			}
			set
			{
				if ((this._Cost_Of_Revenue__Total != value))
				{
					this.OnCost_Of_Revenue__TotalChanging(value);
					this.SendPropertyChanging();
					this._Cost_Of_Revenue__Total = value;
					this.SendPropertyChanged("Cost_Of_Revenue__Total");
					this.OnCost_Of_Revenue__TotalChanged();
				}
			}
		}
		
		[Column(Name="[Gross Profit]", Storage="_Gross_Profit", DbType="Money")]
		public System.Nullable<decimal> Gross_Profit
		{
			get
			{
				return this._Gross_Profit;
			}
			set
			{
				if ((this._Gross_Profit != value))
				{
					this.OnGross_ProfitChanging(value);
					this.SendPropertyChanging();
					this._Gross_Profit = value;
					this.SendPropertyChanged("Gross_Profit");
					this.OnGross_ProfitChanged();
				}
			}
		}
		
		[Column(Name="[Selling/General/Admin. Expenses, Total]", Storage="_Selling_General_Admin__Expenses__Total", DbType="Money")]
		public System.Nullable<decimal> Selling_General_Admin__Expenses__Total
		{
			get
			{
				return this._Selling_General_Admin__Expenses__Total;
			}
			set
			{
				if ((this._Selling_General_Admin__Expenses__Total != value))
				{
					this.OnSelling_General_Admin__Expenses__TotalChanging(value);
					this.SendPropertyChanging();
					this._Selling_General_Admin__Expenses__Total = value;
					this.SendPropertyChanged("Selling_General_Admin__Expenses__Total");
					this.OnSelling_General_Admin__Expenses__TotalChanged();
				}
			}
		}
		
		[Column(Name="[Research & Development]", Storage="_Research___Development", DbType="Money")]
		public System.Nullable<decimal> Research___Development
		{
			get
			{
				return this._Research___Development;
			}
			set
			{
				if ((this._Research___Development != value))
				{
					this.OnResearch___DevelopmentChanging(value);
					this.SendPropertyChanging();
					this._Research___Development = value;
					this.SendPropertyChanged("Research___Development");
					this.OnResearch___DevelopmentChanged();
				}
			}
		}
		
		[Column(Name="[Depreciation/Amortization]", Storage="_Depreciation_Amortization", DbType="Money")]
		public System.Nullable<decimal> Depreciation_Amortization
		{
			get
			{
				return this._Depreciation_Amortization;
			}
			set
			{
				if ((this._Depreciation_Amortization != value))
				{
					this.OnDepreciation_AmortizationChanging(value);
					this.SendPropertyChanging();
					this._Depreciation_Amortization = value;
					this.SendPropertyChanged("Depreciation_Amortization");
					this.OnDepreciation_AmortizationChanged();
				}
			}
		}
		
		[Column(Name="[Interest Expense(Income) - Net Operating]", Storage="_Interest_Expense_Income____Net_Operating", DbType="Money")]
		public System.Nullable<decimal> Interest_Expense_Income____Net_Operating
		{
			get
			{
				return this._Interest_Expense_Income____Net_Operating;
			}
			set
			{
				if ((this._Interest_Expense_Income____Net_Operating != value))
				{
					this.OnInterest_Expense_Income____Net_OperatingChanging(value);
					this.SendPropertyChanging();
					this._Interest_Expense_Income____Net_Operating = value;
					this.SendPropertyChanged("Interest_Expense_Income____Net_Operating");
					this.OnInterest_Expense_Income____Net_OperatingChanged();
				}
			}
		}
		
		[Column(Name="[Unusual Expense (Income)]", Storage="_Unusual_Expense__Income_", DbType="Money")]
		public System.Nullable<decimal> Unusual_Expense__Income_
		{
			get
			{
				return this._Unusual_Expense__Income_;
			}
			set
			{
				if ((this._Unusual_Expense__Income_ != value))
				{
					this.OnUnusual_Expense__Income_Changing(value);
					this.SendPropertyChanging();
					this._Unusual_Expense__Income_ = value;
					this.SendPropertyChanged("Unusual_Expense__Income_");
					this.OnUnusual_Expense__Income_Changed();
				}
			}
		}
		
		[Column(Name="[Other Operating Expenses, Total]", Storage="_Other_Operating_Expenses__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Operating_Expenses__Total
		{
			get
			{
				return this._Other_Operating_Expenses__Total;
			}
			set
			{
				if ((this._Other_Operating_Expenses__Total != value))
				{
					this.OnOther_Operating_Expenses__TotalChanging(value);
					this.SendPropertyChanging();
					this._Other_Operating_Expenses__Total = value;
					this.SendPropertyChanged("Other_Operating_Expenses__Total");
					this.OnOther_Operating_Expenses__TotalChanged();
				}
			}
		}
		
		[Column(Name="[Total Operating Expense]", Storage="_Total_Operating_Expense", DbType="Money")]
		public System.Nullable<decimal> Total_Operating_Expense
		{
			get
			{
				return this._Total_Operating_Expense;
			}
			set
			{
				if ((this._Total_Operating_Expense != value))
				{
					this.OnTotal_Operating_ExpenseChanging(value);
					this.SendPropertyChanging();
					this._Total_Operating_Expense = value;
					this.SendPropertyChanged("Total_Operating_Expense");
					this.OnTotal_Operating_ExpenseChanged();
				}
			}
		}
		
		[Column(Name="[Operating Income]", Storage="_Operating_Income", DbType="Money")]
		public System.Nullable<decimal> Operating_Income
		{
			get
			{
				return this._Operating_Income;
			}
			set
			{
				if ((this._Operating_Income != value))
				{
					this.OnOperating_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Operating_Income = value;
					this.SendPropertyChanged("Operating_Income");
					this.OnOperating_IncomeChanged();
				}
			}
		}
		
		[Column(Name="[Interest Income(Expense), Net Non-Operating]", Storage="_Interest_Income_Expense___Net_Non_Operating", DbType="Money")]
		public System.Nullable<decimal> Interest_Income_Expense___Net_Non_Operating
		{
			get
			{
				return this._Interest_Income_Expense___Net_Non_Operating;
			}
			set
			{
				if ((this._Interest_Income_Expense___Net_Non_Operating != value))
				{
					this.OnInterest_Income_Expense___Net_Non_OperatingChanging(value);
					this.SendPropertyChanging();
					this._Interest_Income_Expense___Net_Non_Operating = value;
					this.SendPropertyChanged("Interest_Income_Expense___Net_Non_Operating");
					this.OnInterest_Income_Expense___Net_Non_OperatingChanged();
				}
			}
		}
		
		[Column(Name="[Gain (Loss) on Sale of Assets]", Storage="_Gain__Loss__on_Sale_of_Assets", DbType="Money")]
		public System.Nullable<decimal> Gain__Loss__on_Sale_of_Assets
		{
			get
			{
				return this._Gain__Loss__on_Sale_of_Assets;
			}
			set
			{
				if ((this._Gain__Loss__on_Sale_of_Assets != value))
				{
					this.OnGain__Loss__on_Sale_of_AssetsChanging(value);
					this.SendPropertyChanging();
					this._Gain__Loss__on_Sale_of_Assets = value;
					this.SendPropertyChanged("Gain__Loss__on_Sale_of_Assets");
					this.OnGain__Loss__on_Sale_of_AssetsChanged();
				}
			}
		}
		
		[Column(Name="[Other, Net]", Storage="_Other__Net", DbType="Money")]
		public System.Nullable<decimal> Other__Net
		{
			get
			{
				return this._Other__Net;
			}
			set
			{
				if ((this._Other__Net != value))
				{
					this.OnOther__NetChanging(value);
					this.SendPropertyChanging();
					this._Other__Net = value;
					this.SendPropertyChanged("Other__Net");
					this.OnOther__NetChanged();
				}
			}
		}
		
		[Column(Name="[Income Before Tax]", Storage="_Income_Before_Tax", DbType="Money")]
		public System.Nullable<decimal> Income_Before_Tax
		{
			get
			{
				return this._Income_Before_Tax;
			}
			set
			{
				if ((this._Income_Before_Tax != value))
				{
					this.OnIncome_Before_TaxChanging(value);
					this.SendPropertyChanging();
					this._Income_Before_Tax = value;
					this.SendPropertyChanged("Income_Before_Tax");
					this.OnIncome_Before_TaxChanged();
				}
			}
		}
		
		[Column(Name="[Income After Tax]", Storage="_Income_After_Tax", DbType="Money")]
		public System.Nullable<decimal> Income_After_Tax
		{
			get
			{
				return this._Income_After_Tax;
			}
			set
			{
				if ((this._Income_After_Tax != value))
				{
					this.OnIncome_After_TaxChanging(value);
					this.SendPropertyChanging();
					this._Income_After_Tax = value;
					this.SendPropertyChanged("Income_After_Tax");
					this.OnIncome_After_TaxChanged();
				}
			}
		}
		
		[Column(Name="[Minority Interest]", Storage="_Minority_Interest", DbType="Money")]
		public System.Nullable<decimal> Minority_Interest
		{
			get
			{
				return this._Minority_Interest;
			}
			set
			{
				if ((this._Minority_Interest != value))
				{
					this.OnMinority_InterestChanging(value);
					this.SendPropertyChanging();
					this._Minority_Interest = value;
					this.SendPropertyChanged("Minority_Interest");
					this.OnMinority_InterestChanged();
				}
			}
		}
		
		[Column(Name="[Equity In Affiliates]", Storage="_Equity_In_Affiliates", DbType="Money")]
		public System.Nullable<decimal> Equity_In_Affiliates
		{
			get
			{
				return this._Equity_In_Affiliates;
			}
			set
			{
				if ((this._Equity_In_Affiliates != value))
				{
					this.OnEquity_In_AffiliatesChanging(value);
					this.SendPropertyChanging();
					this._Equity_In_Affiliates = value;
					this.SendPropertyChanged("Equity_In_Affiliates");
					this.OnEquity_In_AffiliatesChanged();
				}
			}
		}
		
		[Column(Name="[Net Income Before Extra. Items]", Storage="_Net_Income_Before_Extra__Items", DbType="Money")]
		public System.Nullable<decimal> Net_Income_Before_Extra__Items
		{
			get
			{
				return this._Net_Income_Before_Extra__Items;
			}
			set
			{
				if ((this._Net_Income_Before_Extra__Items != value))
				{
					this.OnNet_Income_Before_Extra__ItemsChanging(value);
					this.SendPropertyChanging();
					this._Net_Income_Before_Extra__Items = value;
					this.SendPropertyChanged("Net_Income_Before_Extra__Items");
					this.OnNet_Income_Before_Extra__ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Accounting Change]", Storage="_Accounting_Change", DbType="Money")]
		public System.Nullable<decimal> Accounting_Change
		{
			get
			{
				return this._Accounting_Change;
			}
			set
			{
				if ((this._Accounting_Change != value))
				{
					this.OnAccounting_ChangeChanging(value);
					this.SendPropertyChanging();
					this._Accounting_Change = value;
					this.SendPropertyChanged("Accounting_Change");
					this.OnAccounting_ChangeChanged();
				}
			}
		}
		
		[Column(Name="[Discontinued Operations]", Storage="_Discontinued_Operations", DbType="Money")]
		public System.Nullable<decimal> Discontinued_Operations
		{
			get
			{
				return this._Discontinued_Operations;
			}
			set
			{
				if ((this._Discontinued_Operations != value))
				{
					this.OnDiscontinued_OperationsChanging(value);
					this.SendPropertyChanging();
					this._Discontinued_Operations = value;
					this.SendPropertyChanged("Discontinued_Operations");
					this.OnDiscontinued_OperationsChanged();
				}
			}
		}
		
		[Column(Name="[Extraordinary Item]", Storage="_Extraordinary_Item", DbType="Money")]
		public System.Nullable<decimal> Extraordinary_Item
		{
			get
			{
				return this._Extraordinary_Item;
			}
			set
			{
				if ((this._Extraordinary_Item != value))
				{
					this.OnExtraordinary_ItemChanging(value);
					this.SendPropertyChanging();
					this._Extraordinary_Item = value;
					this.SendPropertyChanged("Extraordinary_Item");
					this.OnExtraordinary_ItemChanged();
				}
			}
		}
		
		[Column(Name="[Net Income]", Storage="_Net_Income", DbType="Money")]
		public System.Nullable<decimal> Net_Income
		{
			get
			{
				return this._Net_Income;
			}
			set
			{
				if ((this._Net_Income != value))
				{
					this.OnNet_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Net_Income = value;
					this.SendPropertyChanged("Net_Income");
					this.OnNet_IncomeChanged();
				}
			}
		}
		
		[Column(Name="[Preferred Dividends]", Storage="_Preferred_Dividends", DbType="Money")]
		public System.Nullable<decimal> Preferred_Dividends
		{
			get
			{
				return this._Preferred_Dividends;
			}
			set
			{
				if ((this._Preferred_Dividends != value))
				{
					this.OnPreferred_DividendsChanging(value);
					this.SendPropertyChanging();
					this._Preferred_Dividends = value;
					this.SendPropertyChanged("Preferred_Dividends");
					this.OnPreferred_DividendsChanged();
				}
			}
		}
		
		[Column(Name="[Income Available to Common Excl. Extra Items]", Storage="_Income_Available_to_Common_Excl__Extra_Items", DbType="Money")]
		public System.Nullable<decimal> Income_Available_to_Common_Excl__Extra_Items
		{
			get
			{
				return this._Income_Available_to_Common_Excl__Extra_Items;
			}
			set
			{
				if ((this._Income_Available_to_Common_Excl__Extra_Items != value))
				{
					this.OnIncome_Available_to_Common_Excl__Extra_ItemsChanging(value);
					this.SendPropertyChanging();
					this._Income_Available_to_Common_Excl__Extra_Items = value;
					this.SendPropertyChanged("Income_Available_to_Common_Excl__Extra_Items");
					this.OnIncome_Available_to_Common_Excl__Extra_ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Income Available to Common Incl. Extra Items]", Storage="_Income_Available_to_Common_Incl__Extra_Items", DbType="Money")]
		public System.Nullable<decimal> Income_Available_to_Common_Incl__Extra_Items
		{
			get
			{
				return this._Income_Available_to_Common_Incl__Extra_Items;
			}
			set
			{
				if ((this._Income_Available_to_Common_Incl__Extra_Items != value))
				{
					this.OnIncome_Available_to_Common_Incl__Extra_ItemsChanging(value);
					this.SendPropertyChanging();
					this._Income_Available_to_Common_Incl__Extra_Items = value;
					this.SendPropertyChanged("Income_Available_to_Common_Incl__Extra_Items");
					this.OnIncome_Available_to_Common_Incl__Extra_ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Basic Weighted Average Shares]", Storage="_Basic_Weighted_Average_Shares", DbType="Money")]
		public System.Nullable<decimal> Basic_Weighted_Average_Shares
		{
			get
			{
				return this._Basic_Weighted_Average_Shares;
			}
			set
			{
				if ((this._Basic_Weighted_Average_Shares != value))
				{
					this.OnBasic_Weighted_Average_SharesChanging(value);
					this.SendPropertyChanging();
					this._Basic_Weighted_Average_Shares = value;
					this.SendPropertyChanged("Basic_Weighted_Average_Shares");
					this.OnBasic_Weighted_Average_SharesChanged();
				}
			}
		}
		
		[Column(Name="[Basic EPS Excluding Extraordinary Items]", Storage="_Basic_EPS_Excluding_Extraordinary_Items", DbType="Money")]
		public System.Nullable<decimal> Basic_EPS_Excluding_Extraordinary_Items
		{
			get
			{
				return this._Basic_EPS_Excluding_Extraordinary_Items;
			}
			set
			{
				if ((this._Basic_EPS_Excluding_Extraordinary_Items != value))
				{
					this.OnBasic_EPS_Excluding_Extraordinary_ItemsChanging(value);
					this.SendPropertyChanging();
					this._Basic_EPS_Excluding_Extraordinary_Items = value;
					this.SendPropertyChanged("Basic_EPS_Excluding_Extraordinary_Items");
					this.OnBasic_EPS_Excluding_Extraordinary_ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Basic EPS Including Extraordinary Items]", Storage="_Basic_EPS_Including_Extraordinary_Items", DbType="Money")]
		public System.Nullable<decimal> Basic_EPS_Including_Extraordinary_Items
		{
			get
			{
				return this._Basic_EPS_Including_Extraordinary_Items;
			}
			set
			{
				if ((this._Basic_EPS_Including_Extraordinary_Items != value))
				{
					this.OnBasic_EPS_Including_Extraordinary_ItemsChanging(value);
					this.SendPropertyChanging();
					this._Basic_EPS_Including_Extraordinary_Items = value;
					this.SendPropertyChanged("Basic_EPS_Including_Extraordinary_Items");
					this.OnBasic_EPS_Including_Extraordinary_ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Dilution Adjustment]", Storage="_Dilution_Adjustment", DbType="Money")]
		public System.Nullable<decimal> Dilution_Adjustment
		{
			get
			{
				return this._Dilution_Adjustment;
			}
			set
			{
				if ((this._Dilution_Adjustment != value))
				{
					this.OnDilution_AdjustmentChanging(value);
					this.SendPropertyChanging();
					this._Dilution_Adjustment = value;
					this.SendPropertyChanged("Dilution_Adjustment");
					this.OnDilution_AdjustmentChanged();
				}
			}
		}
		
		[Column(Name="[Diluted Weighted Average Shares]", Storage="_Diluted_Weighted_Average_Shares", DbType="Money")]
		public System.Nullable<decimal> Diluted_Weighted_Average_Shares
		{
			get
			{
				return this._Diluted_Weighted_Average_Shares;
			}
			set
			{
				if ((this._Diluted_Weighted_Average_Shares != value))
				{
					this.OnDiluted_Weighted_Average_SharesChanging(value);
					this.SendPropertyChanging();
					this._Diluted_Weighted_Average_Shares = value;
					this.SendPropertyChanged("Diluted_Weighted_Average_Shares");
					this.OnDiluted_Weighted_Average_SharesChanged();
				}
			}
		}
		
		[Column(Name="[Diluted EPS Excluding Extraordinary Items]", Storage="_Diluted_EPS_Excluding_Extraordinary_Items", DbType="Money")]
		public System.Nullable<decimal> Diluted_EPS_Excluding_Extraordinary_Items
		{
			get
			{
				return this._Diluted_EPS_Excluding_Extraordinary_Items;
			}
			set
			{
				if ((this._Diluted_EPS_Excluding_Extraordinary_Items != value))
				{
					this.OnDiluted_EPS_Excluding_Extraordinary_ItemsChanging(value);
					this.SendPropertyChanging();
					this._Diluted_EPS_Excluding_Extraordinary_Items = value;
					this.SendPropertyChanged("Diluted_EPS_Excluding_Extraordinary_Items");
					this.OnDiluted_EPS_Excluding_Extraordinary_ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Diluted EPS Including Extraordinary Items]", Storage="_Diluted_EPS_Including_Extraordinary_Items", DbType="Money")]
		public System.Nullable<decimal> Diluted_EPS_Including_Extraordinary_Items
		{
			get
			{
				return this._Diluted_EPS_Including_Extraordinary_Items;
			}
			set
			{
				if ((this._Diluted_EPS_Including_Extraordinary_Items != value))
				{
					this.OnDiluted_EPS_Including_Extraordinary_ItemsChanging(value);
					this.SendPropertyChanging();
					this._Diluted_EPS_Including_Extraordinary_Items = value;
					this.SendPropertyChanged("Diluted_EPS_Including_Extraordinary_Items");
					this.OnDiluted_EPS_Including_Extraordinary_ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Dividends per Share - Common Stock Primary Issue]", Storage="_Dividends_per_Share___Common_Stock_Primary_Issue", DbType="Money")]
		public System.Nullable<decimal> Dividends_per_Share___Common_Stock_Primary_Issue
		{
			get
			{
				return this._Dividends_per_Share___Common_Stock_Primary_Issue;
			}
			set
			{
				if ((this._Dividends_per_Share___Common_Stock_Primary_Issue != value))
				{
					this.OnDividends_per_Share___Common_Stock_Primary_IssueChanging(value);
					this.SendPropertyChanging();
					this._Dividends_per_Share___Common_Stock_Primary_Issue = value;
					this.SendPropertyChanged("Dividends_per_Share___Common_Stock_Primary_Issue");
					this.OnDividends_per_Share___Common_Stock_Primary_IssueChanged();
				}
			}
		}
		
		[Column(Name="[Gross Dividends - Common Stock]", Storage="_Gross_Dividends___Common_Stock", DbType="Money")]
		public System.Nullable<decimal> Gross_Dividends___Common_Stock
		{
			get
			{
				return this._Gross_Dividends___Common_Stock;
			}
			set
			{
				if ((this._Gross_Dividends___Common_Stock != value))
				{
					this.OnGross_Dividends___Common_StockChanging(value);
					this.SendPropertyChanging();
					this._Gross_Dividends___Common_Stock = value;
					this.SendPropertyChanged("Gross_Dividends___Common_Stock");
					this.OnGross_Dividends___Common_StockChanged();
				}
			}
		}
		
		[Column(Name="[Net Income after Stock Based Comp. Expense]", Storage="_Net_Income_after_Stock_Based_Comp__Expense", DbType="Money")]
		public System.Nullable<decimal> Net_Income_after_Stock_Based_Comp__Expense
		{
			get
			{
				return this._Net_Income_after_Stock_Based_Comp__Expense;
			}
			set
			{
				if ((this._Net_Income_after_Stock_Based_Comp__Expense != value))
				{
					this.OnNet_Income_after_Stock_Based_Comp__ExpenseChanging(value);
					this.SendPropertyChanging();
					this._Net_Income_after_Stock_Based_Comp__Expense = value;
					this.SendPropertyChanged("Net_Income_after_Stock_Based_Comp__Expense");
					this.OnNet_Income_after_Stock_Based_Comp__ExpenseChanged();
				}
			}
		}
		
		[Column(Name="[Basic EPS after Stock Based Comp. Expense]", Storage="_Basic_EPS_after_Stock_Based_Comp__Expense", DbType="Money")]
		public System.Nullable<decimal> Basic_EPS_after_Stock_Based_Comp__Expense
		{
			get
			{
				return this._Basic_EPS_after_Stock_Based_Comp__Expense;
			}
			set
			{
				if ((this._Basic_EPS_after_Stock_Based_Comp__Expense != value))
				{
					this.OnBasic_EPS_after_Stock_Based_Comp__ExpenseChanging(value);
					this.SendPropertyChanging();
					this._Basic_EPS_after_Stock_Based_Comp__Expense = value;
					this.SendPropertyChanged("Basic_EPS_after_Stock_Based_Comp__Expense");
					this.OnBasic_EPS_after_Stock_Based_Comp__ExpenseChanged();
				}
			}
		}
		
		[Column(Name="[Diluted EPS after Stock Based Comp. Expense]", Storage="_Diluted_EPS_after_Stock_Based_Comp__Expense", DbType="Money")]
		public System.Nullable<decimal> Diluted_EPS_after_Stock_Based_Comp__Expense
		{
			get
			{
				return this._Diluted_EPS_after_Stock_Based_Comp__Expense;
			}
			set
			{
				if ((this._Diluted_EPS_after_Stock_Based_Comp__Expense != value))
				{
					this.OnDiluted_EPS_after_Stock_Based_Comp__ExpenseChanging(value);
					this.SendPropertyChanging();
					this._Diluted_EPS_after_Stock_Based_Comp__Expense = value;
					this.SendPropertyChanged("Diluted_EPS_after_Stock_Based_Comp__Expense");
					this.OnDiluted_EPS_after_Stock_Based_Comp__ExpenseChanged();
				}
			}
		}
		
		[Column(Name="[Depreciation, Supplemental]", Storage="_Depreciation__Supplemental", DbType="Money")]
		public System.Nullable<decimal> Depreciation__Supplemental
		{
			get
			{
				return this._Depreciation__Supplemental;
			}
			set
			{
				if ((this._Depreciation__Supplemental != value))
				{
					this.OnDepreciation__SupplementalChanging(value);
					this.SendPropertyChanging();
					this._Depreciation__Supplemental = value;
					this.SendPropertyChanged("Depreciation__Supplemental");
					this.OnDepreciation__SupplementalChanged();
				}
			}
		}
		
		[Column(Name="[Total Special Items]", Storage="_Total_Special_Items", DbType="Money")]
		public System.Nullable<decimal> Total_Special_Items
		{
			get
			{
				return this._Total_Special_Items;
			}
			set
			{
				if ((this._Total_Special_Items != value))
				{
					this.OnTotal_Special_ItemsChanging(value);
					this.SendPropertyChanging();
					this._Total_Special_Items = value;
					this.SendPropertyChanged("Total_Special_Items");
					this.OnTotal_Special_ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Normalized Income Before Taxes]", Storage="_Normalized_Income_Before_Taxes", DbType="Money")]
		public System.Nullable<decimal> Normalized_Income_Before_Taxes
		{
			get
			{
				return this._Normalized_Income_Before_Taxes;
			}
			set
			{
				if ((this._Normalized_Income_Before_Taxes != value))
				{
					this.OnNormalized_Income_Before_TaxesChanging(value);
					this.SendPropertyChanging();
					this._Normalized_Income_Before_Taxes = value;
					this.SendPropertyChanged("Normalized_Income_Before_Taxes");
					this.OnNormalized_Income_Before_TaxesChanged();
				}
			}
		}
		
		[Column(Name="[Effect of Special Items on Income Taxes]", Storage="_Effect_of_Special_Items_on_Income_Taxes", DbType="Money")]
		public System.Nullable<decimal> Effect_of_Special_Items_on_Income_Taxes
		{
			get
			{
				return this._Effect_of_Special_Items_on_Income_Taxes;
			}
			set
			{
				if ((this._Effect_of_Special_Items_on_Income_Taxes != value))
				{
					this.OnEffect_of_Special_Items_on_Income_TaxesChanging(value);
					this.SendPropertyChanging();
					this._Effect_of_Special_Items_on_Income_Taxes = value;
					this.SendPropertyChanged("Effect_of_Special_Items_on_Income_Taxes");
					this.OnEffect_of_Special_Items_on_Income_TaxesChanged();
				}
			}
		}
		
		[Column(Name="[Income Taxes Ex. Impact of Special Items]", Storage="_Income_Taxes_Ex__Impact_of_Special_Items", DbType="Money")]
		public System.Nullable<decimal> Income_Taxes_Ex__Impact_of_Special_Items
		{
			get
			{
				return this._Income_Taxes_Ex__Impact_of_Special_Items;
			}
			set
			{
				if ((this._Income_Taxes_Ex__Impact_of_Special_Items != value))
				{
					this.OnIncome_Taxes_Ex__Impact_of_Special_ItemsChanging(value);
					this.SendPropertyChanging();
					this._Income_Taxes_Ex__Impact_of_Special_Items = value;
					this.SendPropertyChanged("Income_Taxes_Ex__Impact_of_Special_Items");
					this.OnIncome_Taxes_Ex__Impact_of_Special_ItemsChanged();
				}
			}
		}
		
		[Column(Name="[Normalized Income After Taxes]", Storage="_Normalized_Income_After_Taxes", DbType="Money")]
		public System.Nullable<decimal> Normalized_Income_After_Taxes
		{
			get
			{
				return this._Normalized_Income_After_Taxes;
			}
			set
			{
				if ((this._Normalized_Income_After_Taxes != value))
				{
					this.OnNormalized_Income_After_TaxesChanging(value);
					this.SendPropertyChanging();
					this._Normalized_Income_After_Taxes = value;
					this.SendPropertyChanged("Normalized_Income_After_Taxes");
					this.OnNormalized_Income_After_TaxesChanged();
				}
			}
		}
		
		[Column(Name="[Normalized Income Avail to Common]", Storage="_Normalized_Income_Avail_to_Common", DbType="Money")]
		public System.Nullable<decimal> Normalized_Income_Avail_to_Common
		{
			get
			{
				return this._Normalized_Income_Avail_to_Common;
			}
			set
			{
				if ((this._Normalized_Income_Avail_to_Common != value))
				{
					this.OnNormalized_Income_Avail_to_CommonChanging(value);
					this.SendPropertyChanging();
					this._Normalized_Income_Avail_to_Common = value;
					this.SendPropertyChanged("Normalized_Income_Avail_to_Common");
					this.OnNormalized_Income_Avail_to_CommonChanged();
				}
			}
		}
		
		[Column(Name="[Basic Normalized EPS]", Storage="_Basic_Normalized_EPS", DbType="Money")]
		public System.Nullable<decimal> Basic_Normalized_EPS
		{
			get
			{
				return this._Basic_Normalized_EPS;
			}
			set
			{
				if ((this._Basic_Normalized_EPS != value))
				{
					this.OnBasic_Normalized_EPSChanging(value);
					this.SendPropertyChanging();
					this._Basic_Normalized_EPS = value;
					this.SendPropertyChanged("Basic_Normalized_EPS");
					this.OnBasic_Normalized_EPSChanged();
				}
			}
		}
		
		[Column(Name="[Diluted Normalized EPS]", Storage="_Diluted_Normalized_EPS", DbType="Money")]
		public System.Nullable<decimal> Diluted_Normalized_EPS
		{
			get
			{
				return this._Diluted_Normalized_EPS;
			}
			set
			{
				if ((this._Diluted_Normalized_EPS != value))
				{
					this.OnDiluted_Normalized_EPSChanging(value);
					this.SendPropertyChanging();
					this._Diluted_Normalized_EPS = value;
					this.SendPropertyChanged("Diluted_Normalized_EPS");
					this.OnDiluted_Normalized_EPSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
