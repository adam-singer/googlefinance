#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinanceAI.Data.Samples
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="FinancialData")]
	public partial class QLSampleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public QLSampleDataContext() : 
				base(global::FinanceAI.Properties.Settings.Default.FinancialDataConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QLSampleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSampleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSampleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSampleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<QLSample> QLSamples
		{
			get
			{
				return this.GetTable<QLSample>();
			}
		}
	}
	
	[Table(Name="dbo.QLSamples")]
	public partial class QLSample
	{
		
		private string _Ticker;
		
		private System.DateTime _Date;
		
		private System.Nullable<decimal> _Performance;
		
		private System.Nullable<decimal> _Revenue;
		
		private System.Nullable<decimal> _Other_Revenue__Total;
		
		private System.Nullable<decimal> _Total_Revenue;
		
		private System.Nullable<decimal> _Cost_Of_Revenue__Total;
		
		private System.Nullable<decimal> _Gross_Profit;
		
		private System.Nullable<decimal> _Selling_General_Admin__Expenses__Total;
		
		private System.Nullable<decimal> _Research___Development;
		
		private System.Nullable<decimal> _Depreciation_Amortization;
		
		private System.Nullable<decimal> _Interest_Expense_Income____Net_Operating;
		
		private System.Nullable<decimal> _Unusual_Expense__Income_;
		
		private System.Nullable<decimal> _Other_Operating_Expenses__Total;
		
		private System.Nullable<decimal> _Total_Operating_Expense;
		
		private System.Nullable<decimal> _Operating_Income;
		
		private System.Nullable<decimal> _Interest_Income_Expense___Net_Non_Operating;
		
		private System.Nullable<decimal> _Gain__Loss__on_Sale_of_Assets;
		
		private System.Nullable<decimal> _Other__Net;
		
		private System.Nullable<decimal> _Income_Before_Tax;
		
		private System.Nullable<decimal> _Income_After_Tax;
		
		private System.Nullable<decimal> _Minority_Interest;
		
		private System.Nullable<decimal> _Equity_In_Affiliates;
		
		private System.Nullable<decimal> _Net_Income_Before_Extra__Items;
		
		private System.Nullable<decimal> _Accounting_Change;
		
		private System.Nullable<decimal> _Discontinued_Operations;
		
		private System.Nullable<decimal> _Extraordinary_Item;
		
		private System.Nullable<decimal> _Net_Income;
		
		private System.Nullable<decimal> _Preferred_Dividends;
		
		private System.Nullable<decimal> _Income_Available_to_Common_Excl__Extra_Items;
		
		private System.Nullable<decimal> _Income_Available_to_Common_Incl__Extra_Items;
		
		private System.Nullable<decimal> _Basic_Weighted_Average_Shares;
		
		private System.Nullable<decimal> _Basic_EPS_Excluding_Extraordinary_Items;
		
		private System.Nullable<decimal> _Basic_EPS_Including_Extraordinary_Items;
		
		private System.Nullable<decimal> _Dilution_Adjustment;
		
		private System.Nullable<decimal> _Diluted_Weighted_Average_Shares;
		
		private System.Nullable<decimal> _Diluted_EPS_Excluding_Extraordinary_Items;
		
		private System.Nullable<decimal> _Diluted_EPS_Including_Extraordinary_Items;
		
		private System.Nullable<decimal> _Dividends_per_Share___Common_Stock_Primary_Issue;
		
		private System.Nullable<decimal> _Gross_Dividends___Common_Stock;
		
		private System.Nullable<decimal> _Net_Income_after_Stock_Based_Comp__Expense;
		
		private System.Nullable<decimal> _Basic_EPS_after_Stock_Based_Comp__Expense;
		
		private System.Nullable<decimal> _Diluted_EPS_after_Stock_Based_Comp__Expense;
		
		private System.Nullable<decimal> _Depreciation__Supplemental;
		
		private System.Nullable<decimal> _Total_Special_Items;
		
		private System.Nullable<decimal> _Normalized_Income_Before_Taxes;
		
		private System.Nullable<decimal> _Effect_of_Special_Items_on_Income_Taxes;
		
		private System.Nullable<decimal> _Income_Taxes_Ex__Impact_of_Special_Items;
		
		private System.Nullable<decimal> _Normalized_Income_After_Taxes;
		
		private System.Nullable<decimal> _Normalized_Income_Avail_to_Common;
		
		private System.Nullable<decimal> _Basic_Normalized_EPS;
		
		private System.Nullable<decimal> _Diluted_Normalized_EPS;
		
		private System.Nullable<decimal> _Cash___Equivalents;
		
		private System.Nullable<decimal> _Short_Term_Investments;
		
		private System.Nullable<decimal> _Cash_and_Short_Term_Investments;
		
		private System.Nullable<decimal> _Accounts_Receivable___Trade__Net;
		
		private System.Nullable<decimal> _Receivables___Other;
		
		private System.Nullable<decimal> _Total_Receivables__Net;
		
		private System.Nullable<decimal> _Total_Inventory;
		
		private System.Nullable<decimal> _Prepaid_Expenses;
		
		private System.Nullable<decimal> _Other_Current_Assets__Total;
		
		private System.Nullable<decimal> _Total_Current_Assets;
		
		private System.Nullable<decimal> _Property_Plant_Equipment__Total___Gross;
		
		private System.Nullable<decimal> _Goodwill__Net;
		
		private System.Nullable<decimal> _Intangibles__Net;
		
		private System.Nullable<decimal> _Long_Term_Investments;
		
		private System.Nullable<decimal> _Other_Long_Term_Assets__Total;
		
		private System.Nullable<decimal> _Total_Assets;
		
		private System.Nullable<decimal> _Accounts_Payable;
		
		private System.Nullable<decimal> _Accrued_Expenses;
		
		private System.Nullable<decimal> _Notes_Payable_Short_Term_Debt;
		
		private System.Nullable<decimal> _Current_Port__of_LT_Debt_Capital_Leases;
		
		private System.Nullable<decimal> _Other_Current_liabilities__Total;
		
		private System.Nullable<decimal> _Total_Current_Liabilities;
		
		private System.Nullable<decimal> _Long_Term_Debt;
		
		private System.Nullable<decimal> _Capital_Lease_Obligations;
		
		private System.Nullable<decimal> _Total_Long_Term_Debt;
		
		private System.Nullable<decimal> _Total_Debt;
		
		private System.Nullable<decimal> _Deferred_Income_Tax;
		
		private System.Nullable<decimal> _Other_Liabilities__Total;
		
		private System.Nullable<decimal> _Total_Liabilities;
		
		private System.Nullable<decimal> _Redeemable_Preferred_Stock__Total;
		
		private System.Nullable<decimal> _Preferred_Stock___Non_Redeemable__Net;
		
		private System.Nullable<decimal> _Common_Stock__Total;
		
		private System.Nullable<decimal> _Additional_Paid_In_Capital;
		
		private System.Nullable<decimal> _Retained_Earnings__Accumulated_Deficit_;
		
		private System.Nullable<decimal> _Treasury_Stock___Common;
		
		private System.Nullable<decimal> _Other_Equity__Total;
		
		private System.Nullable<decimal> _Total_Equity;
		
		private System.Nullable<decimal> _Total_Liabilities___Shareholders__Equity;
		
		private System.Nullable<decimal> _Shares_Outs___Common_Stock_Primary_Issue;
		
		private System.Nullable<decimal> _Total_Common_Shares_Outstanding;
		
		private System.Nullable<decimal> _Depreciation_Depletion;
		
		private System.Nullable<decimal> _Amortization;
		
		private System.Nullable<decimal> _Deferred_Taxes;
		
		private System.Nullable<decimal> _Non_Cash_Items;
		
		private System.Nullable<decimal> _Changes_in_Working_Capital;
		
		private System.Nullable<decimal> _Cash_from_Operating_Activities;
		
		private System.Nullable<decimal> _Capital_Expenditures;
		
		private System.Nullable<decimal> _Other_Investing_Cash_Flow_Items__Total;
		
		private System.Nullable<decimal> _Cash_from_Investing_Activities;
		
		private System.Nullable<decimal> _Financing_Cash_Flow_Items;
		
		private System.Nullable<decimal> _Total_Cash_Dividends_Paid;
		
		private System.Nullable<decimal> _Issuance__Retirement__of_Stock__Net;
		
		private System.Nullable<decimal> _Issuance__Retirement__of_Debt__Net;
		
		private System.Nullable<decimal> _Cash_from_Financing_Activities;
		
		private System.Nullable<decimal> _Foreign_Exchange_Effects;
		
		private System.Nullable<decimal> _Net_Change_in_Cash;
		
		private System.Nullable<decimal> _Cash_Interest_Paid__Supplemental;
		
		private System.Nullable<decimal> _Cash_Taxes_Paid__Supplemental;
		
		public QLSample()
		{
		}
		
		[Column(Storage="_Ticker", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Ticker
		{
			get
			{
				return this._Ticker;
			}
			set
			{
				if ((this._Ticker != value))
				{
					this._Ticker = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Performance", DbType="Money")]
		public System.Nullable<decimal> Performance
		{
			get
			{
				return this._Performance;
			}
			set
			{
				if ((this._Performance != value))
				{
					this._Performance = value;
				}
			}
		}
		
		[Column(Storage="_Revenue", DbType="Money")]
		public System.Nullable<decimal> Revenue
		{
			get
			{
				return this._Revenue;
			}
			set
			{
				if ((this._Revenue != value))
				{
					this._Revenue = value;
				}
			}
		}
		
		[Column(Name="[Other Revenue, Total]", Storage="_Other_Revenue__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Revenue__Total
		{
			get
			{
				return this._Other_Revenue__Total;
			}
			set
			{
				if ((this._Other_Revenue__Total != value))
				{
					this._Other_Revenue__Total = value;
				}
			}
		}
		
		[Column(Name="[Total Revenue]", Storage="_Total_Revenue", DbType="Money")]
		public System.Nullable<decimal> Total_Revenue
		{
			get
			{
				return this._Total_Revenue;
			}
			set
			{
				if ((this._Total_Revenue != value))
				{
					this._Total_Revenue = value;
				}
			}
		}
		
		[Column(Name="[Cost Of Revenue, Total]", Storage="_Cost_Of_Revenue__Total", DbType="Money")]
		public System.Nullable<decimal> Cost_Of_Revenue__Total
		{
			get
			{
				return this._Cost_Of_Revenue__Total;
			}
			set
			{
				if ((this._Cost_Of_Revenue__Total != value))
				{
					this._Cost_Of_Revenue__Total = value;
				}
			}
		}
		
		[Column(Name="[Gross Profit]", Storage="_Gross_Profit", DbType="Money")]
		public System.Nullable<decimal> Gross_Profit
		{
			get
			{
				return this._Gross_Profit;
			}
			set
			{
				if ((this._Gross_Profit != value))
				{
					this._Gross_Profit = value;
				}
			}
		}
		
		[Column(Name="[Selling/General/Admin. Expenses, Total]", Storage="_Selling_General_Admin__Expenses__Total", DbType="Money")]
		public System.Nullable<decimal> Selling_General_Admin__Expenses__Total
		{
			get
			{
				return this._Selling_General_Admin__Expenses__Total;
			}
			set
			{
				if ((this._Selling_General_Admin__Expenses__Total != value))
				{
					this._Selling_General_Admin__Expenses__Total = value;
				}
			}
		}
		
		[Column(Name="[Research & Development]", Storage="_Research___Development", DbType="Money")]
		public System.Nullable<decimal> Research___Development
		{
			get
			{
				return this._Research___Development;
			}
			set
			{
				if ((this._Research___Development != value))
				{
					this._Research___Development = value;
				}
			}
		}
		
		[Column(Name="[Depreciation/Amortization]", Storage="_Depreciation_Amortization", DbType="Money")]
		public System.Nullable<decimal> Depreciation_Amortization
		{
			get
			{
				return this._Depreciation_Amortization;
			}
			set
			{
				if ((this._Depreciation_Amortization != value))
				{
					this._Depreciation_Amortization = value;
				}
			}
		}
		
		[Column(Name="[Interest Expense(Income) - Net Operating]", Storage="_Interest_Expense_Income____Net_Operating", DbType="Money")]
		public System.Nullable<decimal> Interest_Expense_Income____Net_Operating
		{
			get
			{
				return this._Interest_Expense_Income____Net_Operating;
			}
			set
			{
				if ((this._Interest_Expense_Income____Net_Operating != value))
				{
					this._Interest_Expense_Income____Net_Operating = value;
				}
			}
		}
		
		[Column(Name="[Unusual Expense (Income)]", Storage="_Unusual_Expense__Income_", DbType="Money")]
		public System.Nullable<decimal> Unusual_Expense__Income_
		{
			get
			{
				return this._Unusual_Expense__Income_;
			}
			set
			{
				if ((this._Unusual_Expense__Income_ != value))
				{
					this._Unusual_Expense__Income_ = value;
				}
			}
		}
		
		[Column(Name="[Other Operating Expenses, Total]", Storage="_Other_Operating_Expenses__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Operating_Expenses__Total
		{
			get
			{
				return this._Other_Operating_Expenses__Total;
			}
			set
			{
				if ((this._Other_Operating_Expenses__Total != value))
				{
					this._Other_Operating_Expenses__Total = value;
				}
			}
		}
		
		[Column(Name="[Total Operating Expense]", Storage="_Total_Operating_Expense", DbType="Money")]
		public System.Nullable<decimal> Total_Operating_Expense
		{
			get
			{
				return this._Total_Operating_Expense;
			}
			set
			{
				if ((this._Total_Operating_Expense != value))
				{
					this._Total_Operating_Expense = value;
				}
			}
		}
		
		[Column(Name="[Operating Income]", Storage="_Operating_Income", DbType="Money")]
		public System.Nullable<decimal> Operating_Income
		{
			get
			{
				return this._Operating_Income;
			}
			set
			{
				if ((this._Operating_Income != value))
				{
					this._Operating_Income = value;
				}
			}
		}
		
		[Column(Name="[Interest Income(Expense), Net Non-Operating]", Storage="_Interest_Income_Expense___Net_Non_Operating", DbType="Money")]
		public System.Nullable<decimal> Interest_Income_Expense___Net_Non_Operating
		{
			get
			{
				return this._Interest_Income_Expense___Net_Non_Operating;
			}
			set
			{
				if ((this._Interest_Income_Expense___Net_Non_Operating != value))
				{
					this._Interest_Income_Expense___Net_Non_Operating = value;
				}
			}
		}
		
		[Column(Name="[Gain (Loss) on Sale of Assets]", Storage="_Gain__Loss__on_Sale_of_Assets", DbType="Money")]
		public System.Nullable<decimal> Gain__Loss__on_Sale_of_Assets
		{
			get
			{
				return this._Gain__Loss__on_Sale_of_Assets;
			}
			set
			{
				if ((this._Gain__Loss__on_Sale_of_Assets != value))
				{
					this._Gain__Loss__on_Sale_of_Assets = value;
				}
			}
		}
		
		[Column(Name="[Other, Net]", Storage="_Other__Net", DbType="Money")]
		public System.Nullable<decimal> Other__Net
		{
			get
			{
				return this._Other__Net;
			}
			set
			{
				if ((this._Other__Net != value))
				{
					this._Other__Net = value;
				}
			}
		}
		
		[Column(Name="[Income Before Tax]", Storage="_Income_Before_Tax", DbType="Money")]
		public System.Nullable<decimal> Income_Before_Tax
		{
			get
			{
				return this._Income_Before_Tax;
			}
			set
			{
				if ((this._Income_Before_Tax != value))
				{
					this._Income_Before_Tax = value;
				}
			}
		}
		
		[Column(Name="[Income After Tax]", Storage="_Income_After_Tax", DbType="Money")]
		public System.Nullable<decimal> Income_After_Tax
		{
			get
			{
				return this._Income_After_Tax;
			}
			set
			{
				if ((this._Income_After_Tax != value))
				{
					this._Income_After_Tax = value;
				}
			}
		}
		
		[Column(Name="[Minority Interest]", Storage="_Minority_Interest", DbType="Money")]
		public System.Nullable<decimal> Minority_Interest
		{
			get
			{
				return this._Minority_Interest;
			}
			set
			{
				if ((this._Minority_Interest != value))
				{
					this._Minority_Interest = value;
				}
			}
		}
		
		[Column(Name="[Equity In Affiliates]", Storage="_Equity_In_Affiliates", DbType="Money")]
		public System.Nullable<decimal> Equity_In_Affiliates
		{
			get
			{
				return this._Equity_In_Affiliates;
			}
			set
			{
				if ((this._Equity_In_Affiliates != value))
				{
					this._Equity_In_Affiliates = value;
				}
			}
		}
		
		[Column(Name="[Net Income Before Extra. Items]", Storage="_Net_Income_Before_Extra__Items", DbType="Money")]
		public System.Nullable<decimal> Net_Income_Before_Extra__Items
		{
			get
			{
				return this._Net_Income_Before_Extra__Items;
			}
			set
			{
				if ((this._Net_Income_Before_Extra__Items != value))
				{
					this._Net_Income_Before_Extra__Items = value;
				}
			}
		}
		
		[Column(Name="[Accounting Change]", Storage="_Accounting_Change", DbType="Money")]
		public System.Nullable<decimal> Accounting_Change
		{
			get
			{
				return this._Accounting_Change;
			}
			set
			{
				if ((this._Accounting_Change != value))
				{
					this._Accounting_Change = value;
				}
			}
		}
		
		[Column(Name="[Discontinued Operations]", Storage="_Discontinued_Operations", DbType="Money")]
		public System.Nullable<decimal> Discontinued_Operations
		{
			get
			{
				return this._Discontinued_Operations;
			}
			set
			{
				if ((this._Discontinued_Operations != value))
				{
					this._Discontinued_Operations = value;
				}
			}
		}
		
		[Column(Name="[Extraordinary Item]", Storage="_Extraordinary_Item", DbType="Money")]
		public System.Nullable<decimal> Extraordinary_Item
		{
			get
			{
				return this._Extraordinary_Item;
			}
			set
			{
				if ((this._Extraordinary_Item != value))
				{
					this._Extraordinary_Item = value;
				}
			}
		}
		
		[Column(Name="[Net Income]", Storage="_Net_Income", DbType="Money")]
		public System.Nullable<decimal> Net_Income
		{
			get
			{
				return this._Net_Income;
			}
			set
			{
				if ((this._Net_Income != value))
				{
					this._Net_Income = value;
				}
			}
		}
		
		[Column(Name="[Preferred Dividends]", Storage="_Preferred_Dividends", DbType="Money")]
		public System.Nullable<decimal> Preferred_Dividends
		{
			get
			{
				return this._Preferred_Dividends;
			}
			set
			{
				if ((this._Preferred_Dividends != value))
				{
					this._Preferred_Dividends = value;
				}
			}
		}
		
		[Column(Name="[Income Available to Common Excl. Extra Items]", Storage="_Income_Available_to_Common_Excl__Extra_Items", DbType="Money")]
		public System.Nullable<decimal> Income_Available_to_Common_Excl__Extra_Items
		{
			get
			{
				return this._Income_Available_to_Common_Excl__Extra_Items;
			}
			set
			{
				if ((this._Income_Available_to_Common_Excl__Extra_Items != value))
				{
					this._Income_Available_to_Common_Excl__Extra_Items = value;
				}
			}
		}
		
		[Column(Name="[Income Available to Common Incl. Extra Items]", Storage="_Income_Available_to_Common_Incl__Extra_Items", DbType="Money")]
		public System.Nullable<decimal> Income_Available_to_Common_Incl__Extra_Items
		{
			get
			{
				return this._Income_Available_to_Common_Incl__Extra_Items;
			}
			set
			{
				if ((this._Income_Available_to_Common_Incl__Extra_Items != value))
				{
					this._Income_Available_to_Common_Incl__Extra_Items = value;
				}
			}
		}
		
		[Column(Name="[Basic Weighted Average Shares]", Storage="_Basic_Weighted_Average_Shares", DbType="Money")]
		public System.Nullable<decimal> Basic_Weighted_Average_Shares
		{
			get
			{
				return this._Basic_Weighted_Average_Shares;
			}
			set
			{
				if ((this._Basic_Weighted_Average_Shares != value))
				{
					this._Basic_Weighted_Average_Shares = value;
				}
			}
		}
		
		[Column(Name="[Basic EPS Excluding Extraordinary Items]", Storage="_Basic_EPS_Excluding_Extraordinary_Items", DbType="Money")]
		public System.Nullable<decimal> Basic_EPS_Excluding_Extraordinary_Items
		{
			get
			{
				return this._Basic_EPS_Excluding_Extraordinary_Items;
			}
			set
			{
				if ((this._Basic_EPS_Excluding_Extraordinary_Items != value))
				{
					this._Basic_EPS_Excluding_Extraordinary_Items = value;
				}
			}
		}
		
		[Column(Name="[Basic EPS Including Extraordinary Items]", Storage="_Basic_EPS_Including_Extraordinary_Items", DbType="Money")]
		public System.Nullable<decimal> Basic_EPS_Including_Extraordinary_Items
		{
			get
			{
				return this._Basic_EPS_Including_Extraordinary_Items;
			}
			set
			{
				if ((this._Basic_EPS_Including_Extraordinary_Items != value))
				{
					this._Basic_EPS_Including_Extraordinary_Items = value;
				}
			}
		}
		
		[Column(Name="[Dilution Adjustment]", Storage="_Dilution_Adjustment", DbType="Money")]
		public System.Nullable<decimal> Dilution_Adjustment
		{
			get
			{
				return this._Dilution_Adjustment;
			}
			set
			{
				if ((this._Dilution_Adjustment != value))
				{
					this._Dilution_Adjustment = value;
				}
			}
		}
		
		[Column(Name="[Diluted Weighted Average Shares]", Storage="_Diluted_Weighted_Average_Shares", DbType="Money")]
		public System.Nullable<decimal> Diluted_Weighted_Average_Shares
		{
			get
			{
				return this._Diluted_Weighted_Average_Shares;
			}
			set
			{
				if ((this._Diluted_Weighted_Average_Shares != value))
				{
					this._Diluted_Weighted_Average_Shares = value;
				}
			}
		}
		
		[Column(Name="[Diluted EPS Excluding Extraordinary Items]", Storage="_Diluted_EPS_Excluding_Extraordinary_Items", DbType="Money")]
		public System.Nullable<decimal> Diluted_EPS_Excluding_Extraordinary_Items
		{
			get
			{
				return this._Diluted_EPS_Excluding_Extraordinary_Items;
			}
			set
			{
				if ((this._Diluted_EPS_Excluding_Extraordinary_Items != value))
				{
					this._Diluted_EPS_Excluding_Extraordinary_Items = value;
				}
			}
		}
		
		[Column(Name="[Diluted EPS Including Extraordinary Items]", Storage="_Diluted_EPS_Including_Extraordinary_Items", DbType="Money")]
		public System.Nullable<decimal> Diluted_EPS_Including_Extraordinary_Items
		{
			get
			{
				return this._Diluted_EPS_Including_Extraordinary_Items;
			}
			set
			{
				if ((this._Diluted_EPS_Including_Extraordinary_Items != value))
				{
					this._Diluted_EPS_Including_Extraordinary_Items = value;
				}
			}
		}
		
		[Column(Name="[Dividends per Share - Common Stock Primary Issue]", Storage="_Dividends_per_Share___Common_Stock_Primary_Issue", DbType="Money")]
		public System.Nullable<decimal> Dividends_per_Share___Common_Stock_Primary_Issue
		{
			get
			{
				return this._Dividends_per_Share___Common_Stock_Primary_Issue;
			}
			set
			{
				if ((this._Dividends_per_Share___Common_Stock_Primary_Issue != value))
				{
					this._Dividends_per_Share___Common_Stock_Primary_Issue = value;
				}
			}
		}
		
		[Column(Name="[Gross Dividends - Common Stock]", Storage="_Gross_Dividends___Common_Stock", DbType="Money")]
		public System.Nullable<decimal> Gross_Dividends___Common_Stock
		{
			get
			{
				return this._Gross_Dividends___Common_Stock;
			}
			set
			{
				if ((this._Gross_Dividends___Common_Stock != value))
				{
					this._Gross_Dividends___Common_Stock = value;
				}
			}
		}
		
		[Column(Name="[Net Income after Stock Based Comp. Expense]", Storage="_Net_Income_after_Stock_Based_Comp__Expense", DbType="Money")]
		public System.Nullable<decimal> Net_Income_after_Stock_Based_Comp__Expense
		{
			get
			{
				return this._Net_Income_after_Stock_Based_Comp__Expense;
			}
			set
			{
				if ((this._Net_Income_after_Stock_Based_Comp__Expense != value))
				{
					this._Net_Income_after_Stock_Based_Comp__Expense = value;
				}
			}
		}
		
		[Column(Name="[Basic EPS after Stock Based Comp. Expense]", Storage="_Basic_EPS_after_Stock_Based_Comp__Expense", DbType="Money")]
		public System.Nullable<decimal> Basic_EPS_after_Stock_Based_Comp__Expense
		{
			get
			{
				return this._Basic_EPS_after_Stock_Based_Comp__Expense;
			}
			set
			{
				if ((this._Basic_EPS_after_Stock_Based_Comp__Expense != value))
				{
					this._Basic_EPS_after_Stock_Based_Comp__Expense = value;
				}
			}
		}
		
		[Column(Name="[Diluted EPS after Stock Based Comp. Expense]", Storage="_Diluted_EPS_after_Stock_Based_Comp__Expense", DbType="Money")]
		public System.Nullable<decimal> Diluted_EPS_after_Stock_Based_Comp__Expense
		{
			get
			{
				return this._Diluted_EPS_after_Stock_Based_Comp__Expense;
			}
			set
			{
				if ((this._Diluted_EPS_after_Stock_Based_Comp__Expense != value))
				{
					this._Diluted_EPS_after_Stock_Based_Comp__Expense = value;
				}
			}
		}
		
		[Column(Name="[Depreciation, Supplemental]", Storage="_Depreciation__Supplemental", DbType="Money")]
		public System.Nullable<decimal> Depreciation__Supplemental
		{
			get
			{
				return this._Depreciation__Supplemental;
			}
			set
			{
				if ((this._Depreciation__Supplemental != value))
				{
					this._Depreciation__Supplemental = value;
				}
			}
		}
		
		[Column(Name="[Total Special Items]", Storage="_Total_Special_Items", DbType="Money")]
		public System.Nullable<decimal> Total_Special_Items
		{
			get
			{
				return this._Total_Special_Items;
			}
			set
			{
				if ((this._Total_Special_Items != value))
				{
					this._Total_Special_Items = value;
				}
			}
		}
		
		[Column(Name="[Normalized Income Before Taxes]", Storage="_Normalized_Income_Before_Taxes", DbType="Money")]
		public System.Nullable<decimal> Normalized_Income_Before_Taxes
		{
			get
			{
				return this._Normalized_Income_Before_Taxes;
			}
			set
			{
				if ((this._Normalized_Income_Before_Taxes != value))
				{
					this._Normalized_Income_Before_Taxes = value;
				}
			}
		}
		
		[Column(Name="[Effect of Special Items on Income Taxes]", Storage="_Effect_of_Special_Items_on_Income_Taxes", DbType="Money")]
		public System.Nullable<decimal> Effect_of_Special_Items_on_Income_Taxes
		{
			get
			{
				return this._Effect_of_Special_Items_on_Income_Taxes;
			}
			set
			{
				if ((this._Effect_of_Special_Items_on_Income_Taxes != value))
				{
					this._Effect_of_Special_Items_on_Income_Taxes = value;
				}
			}
		}
		
		[Column(Name="[Income Taxes Ex. Impact of Special Items]", Storage="_Income_Taxes_Ex__Impact_of_Special_Items", DbType="Money")]
		public System.Nullable<decimal> Income_Taxes_Ex__Impact_of_Special_Items
		{
			get
			{
				return this._Income_Taxes_Ex__Impact_of_Special_Items;
			}
			set
			{
				if ((this._Income_Taxes_Ex__Impact_of_Special_Items != value))
				{
					this._Income_Taxes_Ex__Impact_of_Special_Items = value;
				}
			}
		}
		
		[Column(Name="[Normalized Income After Taxes]", Storage="_Normalized_Income_After_Taxes", DbType="Money")]
		public System.Nullable<decimal> Normalized_Income_After_Taxes
		{
			get
			{
				return this._Normalized_Income_After_Taxes;
			}
			set
			{
				if ((this._Normalized_Income_After_Taxes != value))
				{
					this._Normalized_Income_After_Taxes = value;
				}
			}
		}
		
		[Column(Name="[Normalized Income Avail to Common]", Storage="_Normalized_Income_Avail_to_Common", DbType="Money")]
		public System.Nullable<decimal> Normalized_Income_Avail_to_Common
		{
			get
			{
				return this._Normalized_Income_Avail_to_Common;
			}
			set
			{
				if ((this._Normalized_Income_Avail_to_Common != value))
				{
					this._Normalized_Income_Avail_to_Common = value;
				}
			}
		}
		
		[Column(Name="[Basic Normalized EPS]", Storage="_Basic_Normalized_EPS", DbType="Money")]
		public System.Nullable<decimal> Basic_Normalized_EPS
		{
			get
			{
				return this._Basic_Normalized_EPS;
			}
			set
			{
				if ((this._Basic_Normalized_EPS != value))
				{
					this._Basic_Normalized_EPS = value;
				}
			}
		}
		
		[Column(Name="[Diluted Normalized EPS]", Storage="_Diluted_Normalized_EPS", DbType="Money")]
		public System.Nullable<decimal> Diluted_Normalized_EPS
		{
			get
			{
				return this._Diluted_Normalized_EPS;
			}
			set
			{
				if ((this._Diluted_Normalized_EPS != value))
				{
					this._Diluted_Normalized_EPS = value;
				}
			}
		}
		
		[Column(Name="[Cash & Equivalents]", Storage="_Cash___Equivalents", DbType="Money")]
		public System.Nullable<decimal> Cash___Equivalents
		{
			get
			{
				return this._Cash___Equivalents;
			}
			set
			{
				if ((this._Cash___Equivalents != value))
				{
					this._Cash___Equivalents = value;
				}
			}
		}
		
		[Column(Name="[Short Term Investments]", Storage="_Short_Term_Investments", DbType="Money")]
		public System.Nullable<decimal> Short_Term_Investments
		{
			get
			{
				return this._Short_Term_Investments;
			}
			set
			{
				if ((this._Short_Term_Investments != value))
				{
					this._Short_Term_Investments = value;
				}
			}
		}
		
		[Column(Name="[Cash and Short Term Investments]", Storage="_Cash_and_Short_Term_Investments", DbType="Money")]
		public System.Nullable<decimal> Cash_and_Short_Term_Investments
		{
			get
			{
				return this._Cash_and_Short_Term_Investments;
			}
			set
			{
				if ((this._Cash_and_Short_Term_Investments != value))
				{
					this._Cash_and_Short_Term_Investments = value;
				}
			}
		}
		
		[Column(Name="[Accounts Receivable - Trade, Net]", Storage="_Accounts_Receivable___Trade__Net", DbType="Money")]
		public System.Nullable<decimal> Accounts_Receivable___Trade__Net
		{
			get
			{
				return this._Accounts_Receivable___Trade__Net;
			}
			set
			{
				if ((this._Accounts_Receivable___Trade__Net != value))
				{
					this._Accounts_Receivable___Trade__Net = value;
				}
			}
		}
		
		[Column(Name="[Receivables - Other]", Storage="_Receivables___Other", DbType="Money")]
		public System.Nullable<decimal> Receivables___Other
		{
			get
			{
				return this._Receivables___Other;
			}
			set
			{
				if ((this._Receivables___Other != value))
				{
					this._Receivables___Other = value;
				}
			}
		}
		
		[Column(Name="[Total Receivables, Net]", Storage="_Total_Receivables__Net", DbType="Money")]
		public System.Nullable<decimal> Total_Receivables__Net
		{
			get
			{
				return this._Total_Receivables__Net;
			}
			set
			{
				if ((this._Total_Receivables__Net != value))
				{
					this._Total_Receivables__Net = value;
				}
			}
		}
		
		[Column(Name="[Total Inventory]", Storage="_Total_Inventory", DbType="Money")]
		public System.Nullable<decimal> Total_Inventory
		{
			get
			{
				return this._Total_Inventory;
			}
			set
			{
				if ((this._Total_Inventory != value))
				{
					this._Total_Inventory = value;
				}
			}
		}
		
		[Column(Name="[Prepaid Expenses]", Storage="_Prepaid_Expenses", DbType="Money")]
		public System.Nullable<decimal> Prepaid_Expenses
		{
			get
			{
				return this._Prepaid_Expenses;
			}
			set
			{
				if ((this._Prepaid_Expenses != value))
				{
					this._Prepaid_Expenses = value;
				}
			}
		}
		
		[Column(Name="[Other Current Assets, Total]", Storage="_Other_Current_Assets__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Current_Assets__Total
		{
			get
			{
				return this._Other_Current_Assets__Total;
			}
			set
			{
				if ((this._Other_Current_Assets__Total != value))
				{
					this._Other_Current_Assets__Total = value;
				}
			}
		}
		
		[Column(Name="[Total Current Assets]", Storage="_Total_Current_Assets", DbType="Money")]
		public System.Nullable<decimal> Total_Current_Assets
		{
			get
			{
				return this._Total_Current_Assets;
			}
			set
			{
				if ((this._Total_Current_Assets != value))
				{
					this._Total_Current_Assets = value;
				}
			}
		}
		
		[Column(Name="[Property/Plant/Equipment, Total - Gross]", Storage="_Property_Plant_Equipment__Total___Gross", DbType="Money")]
		public System.Nullable<decimal> Property_Plant_Equipment__Total___Gross
		{
			get
			{
				return this._Property_Plant_Equipment__Total___Gross;
			}
			set
			{
				if ((this._Property_Plant_Equipment__Total___Gross != value))
				{
					this._Property_Plant_Equipment__Total___Gross = value;
				}
			}
		}
		
		[Column(Name="[Goodwill, Net]", Storage="_Goodwill__Net", DbType="Money")]
		public System.Nullable<decimal> Goodwill__Net
		{
			get
			{
				return this._Goodwill__Net;
			}
			set
			{
				if ((this._Goodwill__Net != value))
				{
					this._Goodwill__Net = value;
				}
			}
		}
		
		[Column(Name="[Intangibles, Net]", Storage="_Intangibles__Net", DbType="Money")]
		public System.Nullable<decimal> Intangibles__Net
		{
			get
			{
				return this._Intangibles__Net;
			}
			set
			{
				if ((this._Intangibles__Net != value))
				{
					this._Intangibles__Net = value;
				}
			}
		}
		
		[Column(Name="[Long Term Investments]", Storage="_Long_Term_Investments", DbType="Money")]
		public System.Nullable<decimal> Long_Term_Investments
		{
			get
			{
				return this._Long_Term_Investments;
			}
			set
			{
				if ((this._Long_Term_Investments != value))
				{
					this._Long_Term_Investments = value;
				}
			}
		}
		
		[Column(Name="[Other Long Term Assets, Total]", Storage="_Other_Long_Term_Assets__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Long_Term_Assets__Total
		{
			get
			{
				return this._Other_Long_Term_Assets__Total;
			}
			set
			{
				if ((this._Other_Long_Term_Assets__Total != value))
				{
					this._Other_Long_Term_Assets__Total = value;
				}
			}
		}
		
		[Column(Name="[Total Assets]", Storage="_Total_Assets", DbType="Money")]
		public System.Nullable<decimal> Total_Assets
		{
			get
			{
				return this._Total_Assets;
			}
			set
			{
				if ((this._Total_Assets != value))
				{
					this._Total_Assets = value;
				}
			}
		}
		
		[Column(Name="[Accounts Payable]", Storage="_Accounts_Payable", DbType="Money")]
		public System.Nullable<decimal> Accounts_Payable
		{
			get
			{
				return this._Accounts_Payable;
			}
			set
			{
				if ((this._Accounts_Payable != value))
				{
					this._Accounts_Payable = value;
				}
			}
		}
		
		[Column(Name="[Accrued Expenses]", Storage="_Accrued_Expenses", DbType="Money")]
		public System.Nullable<decimal> Accrued_Expenses
		{
			get
			{
				return this._Accrued_Expenses;
			}
			set
			{
				if ((this._Accrued_Expenses != value))
				{
					this._Accrued_Expenses = value;
				}
			}
		}
		
		[Column(Name="[Notes Payable/Short Term Debt]", Storage="_Notes_Payable_Short_Term_Debt", DbType="Money")]
		public System.Nullable<decimal> Notes_Payable_Short_Term_Debt
		{
			get
			{
				return this._Notes_Payable_Short_Term_Debt;
			}
			set
			{
				if ((this._Notes_Payable_Short_Term_Debt != value))
				{
					this._Notes_Payable_Short_Term_Debt = value;
				}
			}
		}
		
		[Column(Name="[Current Port. of LT Debt/Capital Leases]", Storage="_Current_Port__of_LT_Debt_Capital_Leases", DbType="Money")]
		public System.Nullable<decimal> Current_Port__of_LT_Debt_Capital_Leases
		{
			get
			{
				return this._Current_Port__of_LT_Debt_Capital_Leases;
			}
			set
			{
				if ((this._Current_Port__of_LT_Debt_Capital_Leases != value))
				{
					this._Current_Port__of_LT_Debt_Capital_Leases = value;
				}
			}
		}
		
		[Column(Name="[Other Current liabilities, Total]", Storage="_Other_Current_liabilities__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Current_liabilities__Total
		{
			get
			{
				return this._Other_Current_liabilities__Total;
			}
			set
			{
				if ((this._Other_Current_liabilities__Total != value))
				{
					this._Other_Current_liabilities__Total = value;
				}
			}
		}
		
		[Column(Name="[Total Current Liabilities]", Storage="_Total_Current_Liabilities", DbType="Money")]
		public System.Nullable<decimal> Total_Current_Liabilities
		{
			get
			{
				return this._Total_Current_Liabilities;
			}
			set
			{
				if ((this._Total_Current_Liabilities != value))
				{
					this._Total_Current_Liabilities = value;
				}
			}
		}
		
		[Column(Name="[Long Term Debt]", Storage="_Long_Term_Debt", DbType="Money")]
		public System.Nullable<decimal> Long_Term_Debt
		{
			get
			{
				return this._Long_Term_Debt;
			}
			set
			{
				if ((this._Long_Term_Debt != value))
				{
					this._Long_Term_Debt = value;
				}
			}
		}
		
		[Column(Name="[Capital Lease Obligations]", Storage="_Capital_Lease_Obligations", DbType="Money")]
		public System.Nullable<decimal> Capital_Lease_Obligations
		{
			get
			{
				return this._Capital_Lease_Obligations;
			}
			set
			{
				if ((this._Capital_Lease_Obligations != value))
				{
					this._Capital_Lease_Obligations = value;
				}
			}
		}
		
		[Column(Name="[Total Long Term Debt]", Storage="_Total_Long_Term_Debt", DbType="Money")]
		public System.Nullable<decimal> Total_Long_Term_Debt
		{
			get
			{
				return this._Total_Long_Term_Debt;
			}
			set
			{
				if ((this._Total_Long_Term_Debt != value))
				{
					this._Total_Long_Term_Debt = value;
				}
			}
		}
		
		[Column(Name="[Total Debt]", Storage="_Total_Debt", DbType="Money")]
		public System.Nullable<decimal> Total_Debt
		{
			get
			{
				return this._Total_Debt;
			}
			set
			{
				if ((this._Total_Debt != value))
				{
					this._Total_Debt = value;
				}
			}
		}
		
		[Column(Name="[Deferred Income Tax]", Storage="_Deferred_Income_Tax", DbType="Money")]
		public System.Nullable<decimal> Deferred_Income_Tax
		{
			get
			{
				return this._Deferred_Income_Tax;
			}
			set
			{
				if ((this._Deferred_Income_Tax != value))
				{
					this._Deferred_Income_Tax = value;
				}
			}
		}
		
		[Column(Name="[Other Liabilities, Total]", Storage="_Other_Liabilities__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Liabilities__Total
		{
			get
			{
				return this._Other_Liabilities__Total;
			}
			set
			{
				if ((this._Other_Liabilities__Total != value))
				{
					this._Other_Liabilities__Total = value;
				}
			}
		}
		
		[Column(Name="[Total Liabilities]", Storage="_Total_Liabilities", DbType="Money")]
		public System.Nullable<decimal> Total_Liabilities
		{
			get
			{
				return this._Total_Liabilities;
			}
			set
			{
				if ((this._Total_Liabilities != value))
				{
					this._Total_Liabilities = value;
				}
			}
		}
		
		[Column(Name="[Redeemable Preferred Stock, Total]", Storage="_Redeemable_Preferred_Stock__Total", DbType="Money")]
		public System.Nullable<decimal> Redeemable_Preferred_Stock__Total
		{
			get
			{
				return this._Redeemable_Preferred_Stock__Total;
			}
			set
			{
				if ((this._Redeemable_Preferred_Stock__Total != value))
				{
					this._Redeemable_Preferred_Stock__Total = value;
				}
			}
		}
		
		[Column(Name="[Preferred Stock - Non Redeemable, Net]", Storage="_Preferred_Stock___Non_Redeemable__Net", DbType="Money")]
		public System.Nullable<decimal> Preferred_Stock___Non_Redeemable__Net
		{
			get
			{
				return this._Preferred_Stock___Non_Redeemable__Net;
			}
			set
			{
				if ((this._Preferred_Stock___Non_Redeemable__Net != value))
				{
					this._Preferred_Stock___Non_Redeemable__Net = value;
				}
			}
		}
		
		[Column(Name="[Common Stock, Total]", Storage="_Common_Stock__Total", DbType="Money")]
		public System.Nullable<decimal> Common_Stock__Total
		{
			get
			{
				return this._Common_Stock__Total;
			}
			set
			{
				if ((this._Common_Stock__Total != value))
				{
					this._Common_Stock__Total = value;
				}
			}
		}
		
		[Column(Name="[Additional Paid-In Capital]", Storage="_Additional_Paid_In_Capital", DbType="Money")]
		public System.Nullable<decimal> Additional_Paid_In_Capital
		{
			get
			{
				return this._Additional_Paid_In_Capital;
			}
			set
			{
				if ((this._Additional_Paid_In_Capital != value))
				{
					this._Additional_Paid_In_Capital = value;
				}
			}
		}
		
		[Column(Name="[Retained Earnings (Accumulated Deficit)]", Storage="_Retained_Earnings__Accumulated_Deficit_", DbType="Money")]
		public System.Nullable<decimal> Retained_Earnings__Accumulated_Deficit_
		{
			get
			{
				return this._Retained_Earnings__Accumulated_Deficit_;
			}
			set
			{
				if ((this._Retained_Earnings__Accumulated_Deficit_ != value))
				{
					this._Retained_Earnings__Accumulated_Deficit_ = value;
				}
			}
		}
		
		[Column(Name="[Treasury Stock - Common]", Storage="_Treasury_Stock___Common", DbType="Money")]
		public System.Nullable<decimal> Treasury_Stock___Common
		{
			get
			{
				return this._Treasury_Stock___Common;
			}
			set
			{
				if ((this._Treasury_Stock___Common != value))
				{
					this._Treasury_Stock___Common = value;
				}
			}
		}
		
		[Column(Name="[Other Equity, Total]", Storage="_Other_Equity__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Equity__Total
		{
			get
			{
				return this._Other_Equity__Total;
			}
			set
			{
				if ((this._Other_Equity__Total != value))
				{
					this._Other_Equity__Total = value;
				}
			}
		}
		
		[Column(Name="[Total Equity]", Storage="_Total_Equity", DbType="Money")]
		public System.Nullable<decimal> Total_Equity
		{
			get
			{
				return this._Total_Equity;
			}
			set
			{
				if ((this._Total_Equity != value))
				{
					this._Total_Equity = value;
				}
			}
		}
		
		[Column(Name="[Total Liabilities & Shareholders\' Equity]", Storage="_Total_Liabilities___Shareholders__Equity", DbType="Money")]
		public System.Nullable<decimal> Total_Liabilities___Shareholders__Equity
		{
			get
			{
				return this._Total_Liabilities___Shareholders__Equity;
			}
			set
			{
				if ((this._Total_Liabilities___Shareholders__Equity != value))
				{
					this._Total_Liabilities___Shareholders__Equity = value;
				}
			}
		}
		
		[Column(Name="[Shares Outs - Common Stock Primary Issue]", Storage="_Shares_Outs___Common_Stock_Primary_Issue", DbType="Money")]
		public System.Nullable<decimal> Shares_Outs___Common_Stock_Primary_Issue
		{
			get
			{
				return this._Shares_Outs___Common_Stock_Primary_Issue;
			}
			set
			{
				if ((this._Shares_Outs___Common_Stock_Primary_Issue != value))
				{
					this._Shares_Outs___Common_Stock_Primary_Issue = value;
				}
			}
		}
		
		[Column(Name="[Total Common Shares Outstanding]", Storage="_Total_Common_Shares_Outstanding", DbType="Money")]
		public System.Nullable<decimal> Total_Common_Shares_Outstanding
		{
			get
			{
				return this._Total_Common_Shares_Outstanding;
			}
			set
			{
				if ((this._Total_Common_Shares_Outstanding != value))
				{
					this._Total_Common_Shares_Outstanding = value;
				}
			}
		}
		
		[Column(Name="[Depreciation/Depletion]", Storage="_Depreciation_Depletion", DbType="Money")]
		public System.Nullable<decimal> Depreciation_Depletion
		{
			get
			{
				return this._Depreciation_Depletion;
			}
			set
			{
				if ((this._Depreciation_Depletion != value))
				{
					this._Depreciation_Depletion = value;
				}
			}
		}
		
		[Column(Storage="_Amortization", DbType="Money")]
		public System.Nullable<decimal> Amortization
		{
			get
			{
				return this._Amortization;
			}
			set
			{
				if ((this._Amortization != value))
				{
					this._Amortization = value;
				}
			}
		}
		
		[Column(Name="[Deferred Taxes]", Storage="_Deferred_Taxes", DbType="Money")]
		public System.Nullable<decimal> Deferred_Taxes
		{
			get
			{
				return this._Deferred_Taxes;
			}
			set
			{
				if ((this._Deferred_Taxes != value))
				{
					this._Deferred_Taxes = value;
				}
			}
		}
		
		[Column(Name="[Non-Cash Items]", Storage="_Non_Cash_Items", DbType="Money")]
		public System.Nullable<decimal> Non_Cash_Items
		{
			get
			{
				return this._Non_Cash_Items;
			}
			set
			{
				if ((this._Non_Cash_Items != value))
				{
					this._Non_Cash_Items = value;
				}
			}
		}
		
		[Column(Name="[Changes in Working Capital]", Storage="_Changes_in_Working_Capital", DbType="Money")]
		public System.Nullable<decimal> Changes_in_Working_Capital
		{
			get
			{
				return this._Changes_in_Working_Capital;
			}
			set
			{
				if ((this._Changes_in_Working_Capital != value))
				{
					this._Changes_in_Working_Capital = value;
				}
			}
		}
		
		[Column(Name="[Cash from Operating Activities]", Storage="_Cash_from_Operating_Activities", DbType="Money")]
		public System.Nullable<decimal> Cash_from_Operating_Activities
		{
			get
			{
				return this._Cash_from_Operating_Activities;
			}
			set
			{
				if ((this._Cash_from_Operating_Activities != value))
				{
					this._Cash_from_Operating_Activities = value;
				}
			}
		}
		
		[Column(Name="[Capital Expenditures]", Storage="_Capital_Expenditures", DbType="Money")]
		public System.Nullable<decimal> Capital_Expenditures
		{
			get
			{
				return this._Capital_Expenditures;
			}
			set
			{
				if ((this._Capital_Expenditures != value))
				{
					this._Capital_Expenditures = value;
				}
			}
		}
		
		[Column(Name="[Other Investing Cash Flow Items, Total]", Storage="_Other_Investing_Cash_Flow_Items__Total", DbType="Money")]
		public System.Nullable<decimal> Other_Investing_Cash_Flow_Items__Total
		{
			get
			{
				return this._Other_Investing_Cash_Flow_Items__Total;
			}
			set
			{
				if ((this._Other_Investing_Cash_Flow_Items__Total != value))
				{
					this._Other_Investing_Cash_Flow_Items__Total = value;
				}
			}
		}
		
		[Column(Name="[Cash from Investing Activities]", Storage="_Cash_from_Investing_Activities", DbType="Money")]
		public System.Nullable<decimal> Cash_from_Investing_Activities
		{
			get
			{
				return this._Cash_from_Investing_Activities;
			}
			set
			{
				if ((this._Cash_from_Investing_Activities != value))
				{
					this._Cash_from_Investing_Activities = value;
				}
			}
		}
		
		[Column(Name="[Financing Cash Flow Items]", Storage="_Financing_Cash_Flow_Items", DbType="Money")]
		public System.Nullable<decimal> Financing_Cash_Flow_Items
		{
			get
			{
				return this._Financing_Cash_Flow_Items;
			}
			set
			{
				if ((this._Financing_Cash_Flow_Items != value))
				{
					this._Financing_Cash_Flow_Items = value;
				}
			}
		}
		
		[Column(Name="[Total Cash Dividends Paid]", Storage="_Total_Cash_Dividends_Paid", DbType="Money")]
		public System.Nullable<decimal> Total_Cash_Dividends_Paid
		{
			get
			{
				return this._Total_Cash_Dividends_Paid;
			}
			set
			{
				if ((this._Total_Cash_Dividends_Paid != value))
				{
					this._Total_Cash_Dividends_Paid = value;
				}
			}
		}
		
		[Column(Name="[Issuance (Retirement) of Stock, Net]", Storage="_Issuance__Retirement__of_Stock__Net", DbType="Money")]
		public System.Nullable<decimal> Issuance__Retirement__of_Stock__Net
		{
			get
			{
				return this._Issuance__Retirement__of_Stock__Net;
			}
			set
			{
				if ((this._Issuance__Retirement__of_Stock__Net != value))
				{
					this._Issuance__Retirement__of_Stock__Net = value;
				}
			}
		}
		
		[Column(Name="[Issuance (Retirement) of Debt, Net]", Storage="_Issuance__Retirement__of_Debt__Net", DbType="Money")]
		public System.Nullable<decimal> Issuance__Retirement__of_Debt__Net
		{
			get
			{
				return this._Issuance__Retirement__of_Debt__Net;
			}
			set
			{
				if ((this._Issuance__Retirement__of_Debt__Net != value))
				{
					this._Issuance__Retirement__of_Debt__Net = value;
				}
			}
		}
		
		[Column(Name="[Cash from Financing Activities]", Storage="_Cash_from_Financing_Activities", DbType="Money")]
		public System.Nullable<decimal> Cash_from_Financing_Activities
		{
			get
			{
				return this._Cash_from_Financing_Activities;
			}
			set
			{
				if ((this._Cash_from_Financing_Activities != value))
				{
					this._Cash_from_Financing_Activities = value;
				}
			}
		}
		
		[Column(Name="[Foreign Exchange Effects]", Storage="_Foreign_Exchange_Effects", DbType="Money")]
		public System.Nullable<decimal> Foreign_Exchange_Effects
		{
			get
			{
				return this._Foreign_Exchange_Effects;
			}
			set
			{
				if ((this._Foreign_Exchange_Effects != value))
				{
					this._Foreign_Exchange_Effects = value;
				}
			}
		}
		
		[Column(Name="[Net Change in Cash]", Storage="_Net_Change_in_Cash", DbType="Money")]
		public System.Nullable<decimal> Net_Change_in_Cash
		{
			get
			{
				return this._Net_Change_in_Cash;
			}
			set
			{
				if ((this._Net_Change_in_Cash != value))
				{
					this._Net_Change_in_Cash = value;
				}
			}
		}
		
		[Column(Name="[Cash Interest Paid, Supplemental]", Storage="_Cash_Interest_Paid__Supplemental", DbType="Money")]
		public System.Nullable<decimal> Cash_Interest_Paid__Supplemental
		{
			get
			{
				return this._Cash_Interest_Paid__Supplemental;
			}
			set
			{
				if ((this._Cash_Interest_Paid__Supplemental != value))
				{
					this._Cash_Interest_Paid__Supplemental = value;
				}
			}
		}
		
		[Column(Name="[Cash Taxes Paid, Supplemental]", Storage="_Cash_Taxes_Paid__Supplemental", DbType="Money")]
		public System.Nullable<decimal> Cash_Taxes_Paid__Supplemental
		{
			get
			{
				return this._Cash_Taxes_Paid__Supplemental;
			}
			set
			{
				if ((this._Cash_Taxes_Paid__Supplemental != value))
				{
					this._Cash_Taxes_Paid__Supplemental = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
